<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0524.1403                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0524.1403)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFiltersHamburgerUI />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='internetsales+' inline='true' name='federated.1ahy4w109n5p8g1agj4ao170flw0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='internetsales' name='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl'>
            <connection class='textscan' directory='C:/Program Files/PostgreSQL/16/data/sql data copy' filename='internetsales.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='SalesBudget.csv' table='[SalesBudget#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Budget' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='internetsales.csv' table='[internetsales#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='productkey' ordinal='0' />
              <column datatype='date' name='orderdatekey' ordinal='1' />
              <column datatype='date' name='shipdatekey' ordinal='2' />
              <column datatype='integer' name='customerkey' ordinal='3' />
              <column datatype='real' name='salesamount' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='SalesBudget.csv' table='[SalesBudget#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Budget' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='customergeographydata.csv' table='[customergeographydata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='customerkey' ordinal='0' />
              <column datatype='integer' name='geographykey' ordinal='1' />
              <column datatype='string' name='customername' ordinal='2' />
              <column datatype='string' name='englisheducation' ordinal='3' />
              <column datatype='string' name='commutedistance' ordinal='4' />
              <column datatype='integer' name='geography_key' ordinal='5' />
              <column datatype='string' name='city' ordinal='6' />
              <column datatype='string' name='stateprovincename' ordinal='7' />
              <column datatype='string' name='countryname' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='date.csv' table='[date#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='date' name='datekey' ordinal='0' />
              <column datatype='date' name='fulldatealternatekey' ordinal='1' />
              <column datatype='string' name='month' ordinal='2' />
              <column datatype='integer' name='calendarquarter' ordinal='3' />
              <column datatype='integer' name='calendaryear' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='productcategory-subcategory.csv' table='[productcategory-subcategory#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='productcategory_key' ordinal='0' />
              <column datatype='string' name='productcategories' ordinal='1' />
              <column datatype='integer' name='productsubcategorykey' ordinal='2' />
              <column datatype='string' name='productsubcategories' ordinal='3' />
              <column datatype='integer' name='productcategorykey' ordinal='4' />
              <column datatype='integer' name='productkey' ordinal='5' />
              <column datatype='integer' name='productsubcategorykey-2' ordinal='6' />
              <column datatype='string' name='englishproductname' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Budget]' value='[SalesBudget.csv].[Budget]' />
          <map key='[Date]' value='[SalesBudget.csv].[Date]' />
          <map key='[calendarquarter]' value='[date.csv].[calendarquarter]' />
          <map key='[calendaryear]' value='[date.csv].[calendaryear]' />
          <map key='[city]' value='[customergeographydata.csv].[city]' />
          <map key='[commutedistance]' value='[customergeographydata.csv].[commutedistance]' />
          <map key='[countryname]' value='[customergeographydata.csv].[countryname]' />
          <map key='[customerkey (customergeographydata.csv)]' value='[customergeographydata.csv].[customerkey]' />
          <map key='[customerkey]' value='[internetsales.csv].[customerkey]' />
          <map key='[customername]' value='[customergeographydata.csv].[customername]' />
          <map key='[datekey]' value='[date.csv].[datekey]' />
          <map key='[englisheducation]' value='[customergeographydata.csv].[englisheducation]' />
          <map key='[englishproductname]' value='[productcategory-subcategory.csv].[englishproductname]' />
          <map key='[fulldatealternatekey]' value='[date.csv].[fulldatealternatekey]' />
          <map key='[geography_key]' value='[customergeographydata.csv].[geography_key]' />
          <map key='[geographykey]' value='[customergeographydata.csv].[geographykey]' />
          <map key='[month]' value='[date.csv].[month]' />
          <map key='[orderdatekey]' value='[internetsales.csv].[orderdatekey]' />
          <map key='[productcategories]' value='[productcategory-subcategory.csv].[productcategories]' />
          <map key='[productcategory_key]' value='[productcategory-subcategory.csv].[productcategory_key]' />
          <map key='[productcategorykey]' value='[productcategory-subcategory.csv].[productcategorykey]' />
          <map key='[productkey (productcategory-subcategory.csv)]' value='[productcategory-subcategory.csv].[productkey]' />
          <map key='[productkey]' value='[internetsales.csv].[productkey]' />
          <map key='[productsubcategories]' value='[productcategory-subcategory.csv].[productsubcategories]' />
          <map key='[productsubcategorykey-2]' value='[productcategory-subcategory.csv].[productsubcategorykey-2]' />
          <map key='[productsubcategorykey]' value='[productcategory-subcategory.csv].[productsubcategorykey]' />
          <map key='[salesamount]' value='[internetsales.csv].[salesamount]' />
          <map key='[shipdatekey]' value='[internetsales.csv].[shipdatekey]' />
          <map key='[stateprovincename]' value='[customergeographydata.csv].[stateprovincename]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[internetsales.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SalesBudget.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[productcategory-subcategory.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productkey]</local-name>
            <parent-name>[internetsales.csv]</parent-name>
            <remote-alias>productkey</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[internetsales.csv_985F50B472C046F9AE5C24FD8636AF69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orderdatekey</remote-name>
            <remote-type>133</remote-type>
            <local-name>[orderdatekey]</local-name>
            <parent-name>[internetsales.csv]</parent-name>
            <remote-alias>orderdatekey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[internetsales.csv_985F50B472C046F9AE5C24FD8636AF69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipdatekey</remote-name>
            <remote-type>133</remote-type>
            <local-name>[shipdatekey]</local-name>
            <parent-name>[internetsales.csv]</parent-name>
            <remote-alias>shipdatekey</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[internetsales.csv_985F50B472C046F9AE5C24FD8636AF69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customerkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customerkey]</local-name>
            <parent-name>[internetsales.csv]</parent-name>
            <remote-alias>customerkey</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[internetsales.csv_985F50B472C046F9AE5C24FD8636AF69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salesamount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[salesamount]</local-name>
            <parent-name>[internetsales.csv]</parent-name>
            <remote-alias>salesamount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[internetsales.csv_985F50B472C046F9AE5C24FD8636AF69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[SalesBudget.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SalesBudget.csv_BBB400472D3B4B798836788B9C95E552]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget]</local-name>
            <parent-name>[SalesBudget.csv]</parent-name>
            <remote-alias>Budget</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SalesBudget.csv_BBB400472D3B4B798836788B9C95E552]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customerkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customerkey (customergeographydata.csv)]</local-name>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias>customerkey</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geographykey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geographykey]</local-name>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias>geographykey</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customername</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customername]</local-name>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias>customername</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>englisheducation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[englisheducation]</local-name>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias>englisheducation</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commutedistance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[commutedistance]</local-name>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias>commutedistance</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography_key</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geography_key]</local-name>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias>geography_key</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stateprovincename</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stateprovincename]</local-name>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias>stateprovincename</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countryname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countryname]</local-name>
            <parent-name>[customergeographydata.csv]</parent-name>
            <remote-alias>countryname</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datekey</remote-name>
            <remote-type>133</remote-type>
            <local-name>[datekey]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>datekey</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date.csv_69184B276B144E74A52726307FE570F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fulldatealternatekey</remote-name>
            <remote-type>133</remote-type>
            <local-name>[fulldatealternatekey]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>fulldatealternatekey</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date.csv_69184B276B144E74A52726307FE570F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date.csv_69184B276B144E74A52726307FE570F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calendarquarter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calendarquarter]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>calendarquarter</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date.csv_69184B276B144E74A52726307FE570F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calendaryear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calendaryear]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>calendaryear</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date.csv_69184B276B144E74A52726307FE570F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productcategory_key</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productcategory_key]</local-name>
            <parent-name>[productcategory-subcategory.csv]</parent-name>
            <remote-alias>productcategory_key</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productcategories</remote-name>
            <remote-type>129</remote-type>
            <local-name>[productcategories]</local-name>
            <parent-name>[productcategory-subcategory.csv]</parent-name>
            <remote-alias>productcategories</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productsubcategorykey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productsubcategorykey]</local-name>
            <parent-name>[productcategory-subcategory.csv]</parent-name>
            <remote-alias>productsubcategorykey</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productsubcategories</remote-name>
            <remote-type>129</remote-type>
            <local-name>[productsubcategories]</local-name>
            <parent-name>[productcategory-subcategory.csv]</parent-name>
            <remote-alias>productsubcategories</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productcategorykey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productcategorykey]</local-name>
            <parent-name>[productcategory-subcategory.csv]</parent-name>
            <remote-alias>productcategorykey</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productkey (productcategory-subcategory.csv)]</local-name>
            <parent-name>[productcategory-subcategory.csv]</parent-name>
            <remote-alias>productkey</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productsubcategorykey-2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productsubcategorykey-2]</local-name>
            <parent-name>[productcategory-subcategory.csv]</parent-name>
            <remote-alias>productsubcategorykey-2</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>englishproductname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[englishproductname]</local-name>
            <parent-name>[productcategory-subcategory.csv]</parent-name>
            <remote-alias>englishproductname</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='SalesBudget.csv' datatype='table' name='[__tableau_internal_object_id__].[SalesBudget.csv_BBB400472D3B4B798836788B9C95E552]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='customergeographydata.csv' datatype='table' name='[__tableau_internal_object_id__].[customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='date.csv' datatype='table' name='[__tableau_internal_object_id__].[date.csv_69184B276B144E74A52726307FE570F6]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='internetsales.csv' datatype='table' name='[__tableau_internal_object_id__].[internetsales.csv_985F50B472C046F9AE5C24FD8636AF69]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='productcategory-subcategory.csv' datatype='table' name='[__tableau_internal_object_id__].[productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33]' role='measure' type='quantitative' />
      <column caption='Calendarquarter' datatype='integer' name='[calendarquarter]' role='measure' type='quantitative' />
      <column caption='Calendaryear' datatype='integer' name='[calendaryear]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Commutedistance' datatype='string' name='[commutedistance]' role='dimension' type='nominal' />
      <column caption='Countryname' datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customerkey (Customergeographydata.Csv)' datatype='integer' name='[customerkey (customergeographydata.csv)]' role='measure' type='quantitative' />
      <column caption='Customerkey' datatype='integer' name='[customerkey]' role='measure' type='quantitative' />
      <column caption='Customername' datatype='string' name='[customername]' role='dimension' type='nominal' />
      <column caption='Datekey' datatype='date' name='[datekey]' role='dimension' type='ordinal' />
      <column caption='Englisheducation' datatype='string' name='[englisheducation]' role='dimension' type='nominal' />
      <column caption='Englishproductname' datatype='string' name='[englishproductname]' role='dimension' type='nominal' />
      <column caption='Fulldatealternatekey' datatype='date' name='[fulldatealternatekey]' role='dimension' type='ordinal' />
      <column caption='Geography Key' datatype='integer' name='[geography_key]' role='dimension' type='ordinal' />
      <column caption='Geographykey' datatype='integer' name='[geographykey]' role='measure' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
      <column caption='Productcategories' datatype='string' name='[productcategories]' role='dimension' type='nominal' />
      <column caption='Productcategory Key' datatype='integer' name='[productcategory_key]' role='dimension' type='ordinal' />
      <column caption='Productcategorykey' datatype='integer' name='[productcategorykey]' role='measure' type='quantitative' />
      <column caption='Productkey (Productcategory-Subcategory.Csv)' datatype='integer' name='[productkey (productcategory-subcategory.csv)]' role='measure' type='quantitative' />
      <column caption='Productkey' datatype='integer' name='[productkey]' role='measure' type='quantitative' />
      <column caption='Productsubcategories' datatype='string' name='[productsubcategories]' role='dimension' type='nominal' />
      <column caption='Productsubcategorykey-2' datatype='integer' name='[productsubcategorykey-2]' role='measure' type='quantitative' />
      <column caption='Productsubcategorykey' datatype='integer' name='[productsubcategorykey]' role='measure' type='quantitative' />
      <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
      <column caption='Shipdatekey' datatype='date' name='[shipdatekey]' role='dimension' type='ordinal' />
      <column caption='Stateprovincename' datatype='string' name='[stateprovincename]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='countryname, stateprovincename, city'>
          <field>[countryname]</field>
          <field>[stateprovincename]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='30' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:month:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;April&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;February&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;March&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SalesBudget.csv' id='SalesBudget.csv_BBB400472D3B4B798836788B9C95E552'>
            <properties context=''>
              <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='SalesBudget.csv' table='[SalesBudget#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='real' name='Budget' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='customergeographydata.csv' id='customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D'>
            <properties context=''>
              <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='customergeographydata.csv' table='[customergeographydata#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='customerkey' ordinal='0' />
                  <column datatype='integer' name='geographykey' ordinal='1' />
                  <column datatype='string' name='customername' ordinal='2' />
                  <column datatype='string' name='englisheducation' ordinal='3' />
                  <column datatype='string' name='commutedistance' ordinal='4' />
                  <column datatype='integer' name='geography_key' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='stateprovincename' ordinal='7' />
                  <column datatype='string' name='countryname' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='date.csv' id='date.csv_69184B276B144E74A52726307FE570F6'>
            <properties context=''>
              <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='date.csv' table='[date#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='datekey' ordinal='0' />
                  <column datatype='date' name='fulldatealternatekey' ordinal='1' />
                  <column datatype='string' name='month' ordinal='2' />
                  <column datatype='integer' name='calendarquarter' ordinal='3' />
                  <column datatype='integer' name='calendaryear' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='internetsales.csv' id='internetsales.csv_985F50B472C046F9AE5C24FD8636AF69'>
            <properties context=''>
              <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='internetsales.csv' table='[internetsales#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='productkey' ordinal='0' />
                  <column datatype='date' name='orderdatekey' ordinal='1' />
                  <column datatype='date' name='shipdatekey' ordinal='2' />
                  <column datatype='integer' name='customerkey' ordinal='3' />
                  <column datatype='real' name='salesamount' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='productcategory-subcategory.csv' id='productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33'>
            <properties context=''>
              <relation connection='textscan.0tcmb201i2pwpq1bs6x2f1lofvyl' name='productcategory-subcategory.csv' table='[productcategory-subcategory#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='productcategory_key' ordinal='0' />
                  <column datatype='string' name='productcategories' ordinal='1' />
                  <column datatype='integer' name='productsubcategorykey' ordinal='2' />
                  <column datatype='string' name='productsubcategories' ordinal='3' />
                  <column datatype='integer' name='productcategorykey' ordinal='4' />
                  <column datatype='integer' name='productkey' ordinal='5' />
                  <column datatype='integer' name='productsubcategorykey-2' ordinal='6' />
                  <column datatype='string' name='englishproductname' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[orderdatekey]' />
              <expression op='[Date]' />
            </expression>
            <first-end-point object-id='internetsales.csv_985F50B472C046F9AE5C24FD8636AF69' />
            <second-end-point object-id='SalesBudget.csv_BBB400472D3B4B798836788B9C95E552' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[customerkey]' />
              <expression op='[customerkey (customergeographydata.csv)]' />
            </expression>
            <first-end-point object-id='internetsales.csv_985F50B472C046F9AE5C24FD8636AF69' />
            <second-end-point object-id='customergeographydata.csv_3B7B5AF2C6EF43C584E7C53873039A6D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[orderdatekey]' />
              <expression op='[datekey]' />
            </expression>
            <first-end-point object-id='internetsales.csv_985F50B472C046F9AE5C24FD8636AF69' />
            <second-end-point object-id='date.csv_69184B276B144E74A52726307FE570F6' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[productkey]' />
              <expression op='[productkey (productcategory-subcategory.csv)]' />
            </expression>
            <first-end-point object-id='internetsales.csv_985F50B472C046F9AE5C24FD8636AF69' />
            <second-end-point object-id='productcategory-subcategory.csv_F3D6D77618A94C55919D9B010705FA33' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='PRODUCTS BY SALES AMOUNT'>
      <table>
        <view>
          <datasources>
            <datasource caption='internetsales+' name='federated.1ahy4w109n5p8g1agj4ao170flw0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ahy4w109n5p8g1agj4ao170flw0'>
            <column caption='Englishproductname' datatype='string' name='[englishproductname]' role='dimension' type='nominal' />
            <column-instance column='[englishproductname]' derivation='None' name='[none:englishproductname:nk]' pivot='key' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Productkey' datatype='integer' name='[productkey]' role='measure' type='quantitative' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column-instance column='[productkey]' derivation='Sum' name='[sum:productkey:qk]' pivot='key' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Year' name='[yr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:englishproductname:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Mountain-200 Black, 38&quot;' />
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Mountain-200 Black, 42&quot;' />
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Mountain-200 Black, 46&quot;' />
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Mountain-200 Silver, 38&quot;' />
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Mountain-200 Silver, 42&quot;' />
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Mountain-200 Silver, 46&quot;' />
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Road-250 Black, 44&quot;' />
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Road-250 Black, 48&quot;' />
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Road-250 Black, 52&quot;' />
              <groupfilter function='member' level='[none:englishproductname:nk]' member='&quot;Road-250 Red, 58&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:productkey:qk]' included-values='in-range'>
            <min>11628</min>
            <max>233916</max>
          </filter>
          <filter class='categorical' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([salesamount])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2021' />
                  <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2022' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</column>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:englishproductname:nk]</column>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:productkey:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' value='YEAR'>
              <formatted-text>
                <run>YEAR</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]' value='Year of Orderdatekey'>
              <formatted-text>
                <run bold='true'>Year of Orderdatekey</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' />
              <text column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:englishproductname:nk]</rows>
        <cols>[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]</cols>
      </table>
      <simple-id uuid='{4C76982F-0BF0-4466-9E0E-32C723AAF6D5}' />
    </worksheet>
    <worksheet name='PRODUST CATEGORY VS SALES AMOUNT'>
      <table>
        <view>
          <datasources>
            <datasource caption='internetsales+' name='federated.1ahy4w109n5p8g1agj4ao170flw0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ahy4w109n5p8g1agj4ao170flw0'>
            <column-instance column='[productcategories]' derivation='None' name='[none:productcategories:nk]' pivot='key' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Productcategories' datatype='string' name='[productcategories]' role='dimension' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Year' name='[yr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:productcategories:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:productcategories:nk]' />
              <groupfilter function='member' level='[none:productcategories:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2021' />
              <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</column>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:productcategories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:productcategories:nk]' value='107' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:productcategories:nk]' value='Productcategories'>
              <formatted-text>
                <run bold='true'>Productcategories</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' />
              <text column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]</rows>
        <cols>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:productcategories:nk]</cols>
      </table>
      <simple-id uuid='{46BEFA4F-0BF9-4CDB-BD21-577648C56F5E}' />
    </worksheet>
    <worksheet name='SALES BY REGION'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>SALES FIGURE BY REGION/CITY</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='internetsales+' name='federated.1ahy4w109n5p8g1agj4ao170flw0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ahy4w109n5p8g1agj4ao170flw0'>
            <column caption='Countryname' datatype='string' name='[countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[countryname]' derivation='None' name='[none:countryname:nk]' pivot='key' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Year' name='[yr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:countryname:nk]'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:countryname:nk]' />
              <groupfilter function='member' level='[none:countryname:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2021' />
              <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</column>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:countryname:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[Longitude (generated)]' field-type='quantitative' max='43425514.126369663' min='-5337640.8005872881' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[Latitude (generated)]' field-type='quantitative' max='11556735.722075759' min='-1749422.0648444672' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' />
              <text column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:countryname:nk]' />
              <geometry column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ahy4w109n5p8g1agj4ao170flw0].[Latitude (generated)]</rows>
        <cols>[federated.1ahy4w109n5p8g1agj4ao170flw0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B488A9C1-8B2A-41B8-A839-EBC4B145587F}' />
    </worksheet>
    <worksheet name='SALES VS BUDGET'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>SALES FIGURE VS BUDGET</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='internetsales+' name='federated.1ahy4w109n5p8g1agj4ao170flw0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ahy4w109n5p8g1agj4ao170flw0'>
            <column datatype='real' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Year' name='[yr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Budget])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2021' />
                  <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2022' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='16' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:Budget:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:Budget:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:Budget:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:Budget:qk] + [federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk])</rows>
        <cols>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:month:nk]</cols>
      </table>
      <simple-id uuid='{664A93B4-6B19-44EC-9738-CBBC8CC96973}' />
    </worksheet>
    <worksheet name='TOP CUSTOMERS '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>TOP 10 CUSTOMERS</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='internetsales+' name='federated.1ahy4w109n5p8g1agj4ao170flw0' />
          </datasources>
          <datasource-dependencies datasource='federated.1ahy4w109n5p8g1agj4ao170flw0'>
            <column caption='Customername' datatype='string' name='[customername]' role='dimension' type='nominal' />
            <column-instance column='[customername]' derivation='None' name='[none:customername:nk]' pivot='key' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Year' name='[yr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:customername:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([salesamount])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:customername:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AaronAllen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AaronHenderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AbigailHarris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AbigailPerry&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AdrianaRana&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AidanHayes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AidanHenderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlanSun&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlbertCastro&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlbertoGomez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexaHoward&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandraAdams&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandraAlexander&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandraCarter&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandraGriffin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandraRussell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandraStewart&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandraWood&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandriaBrooks&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandriaBryant&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandriaCox&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexandriaFoster&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexaRivera&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexBailey&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexiaHughes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexiaPowell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexisBryant&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexisJenkins&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexisMoore&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlexNelson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlfredoDominguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlishaRaji&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AllenSchmidt&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AllisonBell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlvinChen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlvinZhao&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlyssaBailey&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlyssaGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlyssaJones&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlyssaMartinez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlyssaPrice&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AlyssaWard&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AmandaAlexander&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AmandaColeman&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AmberLopez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AmberNelson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AmberScott&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AnaBarnes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AnaDiaz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AndreaJames&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AndreaSanders&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AndresLuo&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AndyRuth&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelaBennett&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelaBrooks&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelaCook&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelaCox&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelaKelly&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelaSimmons&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelCarter&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelEvans&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelicaBennett&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelicaGriffin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelKing&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelMitchell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AngelNelson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AnnaCox&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AnneCarlson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AnneGutierrez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AnnRaman&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AnnVan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AntonioDiaz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AntonioGriffin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AntonioWood&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AriannaBennett&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AriannaMorris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AriannaSimmons&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AriannaTorres&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AriannaWatson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ArthurRana&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ArturoAndersen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AshleyBarnes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AshleySmith&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AustinBrown&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;AustinMoore&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BaileyHernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BarbaraZhao&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BenjaminJai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BenjaminLong&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BenjaminMiller&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BenjaminShan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BethanyTang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BethanyXu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BethTorres&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BiancaHu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BiancaWang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BillyAlvarez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BlakeJackson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BlakeRobinson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BlakeWhite&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BonnieAndersen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BonnieKennedy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BradleyLuo&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BradleyPal&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrandiGutierrez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrandonFoster&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrandonGonzales&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrandonJones&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrandonZhang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrendaGonzalez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrentLi&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrentMa&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrianAlbrecht&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BriannaBailey&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BriannaCook&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrianSanders&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BrookeMorris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BruceAlonso&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BruceBlanco&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BruceWard&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;BryceBailey&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CaitlinCox&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CalebHernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CalvinBeck&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CameronHenderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CameronPatterson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CameronWang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CandaceVan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarlaMalhotra&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarlosJames&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarlosPeterson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarlySharma&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarmenPatel&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarolineBryant&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarolineLong&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarolNath&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarolScott&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarolynRowe&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarrieMunoz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarsonFlores&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CarsonJenkins&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CaseyShe&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CassandraGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CassidyColeman&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CassidyJenkins&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CassieJai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CassieRaje&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CatherineRogers&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CesarArun&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChadRaje&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CharlesGray&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CharlesMoore&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CharlesMorris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CharlesMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CharlesRivera&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CharlesRobinson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CharlesWard&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChaseMorris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CherylSerrano&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChloeCox&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChloeDiaz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChloeHarris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChloeHernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChloeLopez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChloeMartin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChloeParker&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChloePrice&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChristianButler&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChristianRobinson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChristinaMorris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChristinaRivera&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChristinaStewart&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ChristopherMartin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CindyGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ClaudiaXu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ClaytonHe&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ClintonVazquez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CodyHoward&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ColeRichardson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ColeSanchez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ColinSun&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ColinWang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ConnorChen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ConnorParker&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CoreyBeck&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CoreyXie&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CoryPerez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CourtneyCarter&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CourtneyPhillips&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CourtneyTurner&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CristinaSharma&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;CynthiaMadan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DaisyBlanco&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DakotaPerry&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DakotaPowell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DaltonWard&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DamienTang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DanaOrtega&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DanielMoore&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DarrenArun&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DarrenRodriguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DavidBrown&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DavidPatterson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DavidRussell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DavidWashington&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DawnGao&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DeannaBlanco&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DebHughes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DeborahTang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DennisMa&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DesirÃ©eMoreno&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DestinyBryant&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DestinyDiaz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DestinyPerry&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DestinyWatson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DevinCooper&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DevinSmith&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DominicChandra&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DonaldKapoor&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DonLal&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DonnaChande&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DwayneSanz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DylanHarris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DylanPowell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;DylanThompson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EbonyArun&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EbonyFernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EbonyLopez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EbonyMadan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EbonyRana&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EbonySuarez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EddieRubio&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdgarArun&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdgarSrini&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdgarSuri&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EduardoBarnes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EduardoJames&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EduardoLewis&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EduardoRussell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EduardoWalker&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdwardBaker&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdwardCollins&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdwardNelson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdwinChande&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdwinGuo&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdwinLiu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdwinLuo&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdwinWest&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EdwinWu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ElijahPhillips&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ElijahWang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ElijahZhang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ElizabethBradley&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ElizabethHarris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ElizabethHughes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ElizabethPerry&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ElizabethTaylor&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EmmaGriffin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EmmaJackson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EmmaMiller&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EricAlexander&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EricaYang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EricHughes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EricRoss&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ErikaGomez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ErinCook&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ErinCooper&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ErinSanchez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EugeneMa&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EvanBailey&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EvanBaker&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;EvanMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FaithFoster&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FaithRamirez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FaithWood&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FeliciaRomero&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FeliciaRubio&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FernandoDavis&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FernandoTurner&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FranklinChen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FranklinRaje&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FranklinZhao&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FranklinZhu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FrankRamos&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;FrederickSuri&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabrielDiaz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabriellaCook&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabriellaKelly&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabriellaMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabrielleColeman&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabrielleFoster&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabrielleKelly&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabrielleRogers&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabrielleStewart&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabrielLong&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabrielNelson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GabrielPerez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GarrettCooper&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GarrettGray&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GarrettJames&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GarrettMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GavinHenderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GavinPatterson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GavinPrice&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GeorgeRodriguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GeraldSrini&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GlennLin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GraceBrown&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GraceGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GraceJenkins&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GraceSmith&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GraceWilliams&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;GretchenRivas&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HaleyBailey&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HaleyFoster&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HaleySanchez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HannahFoster&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HannahJohnson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HannahJones&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HannahRoss&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HannahRussell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HaroldPerez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HectorCarlson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HectorDiaz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HeidiGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HenryStone&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HunterAllen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HunterHernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HunterMcDonald&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;HunterPowell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IanEdwards&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IanGonzalez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IanHenderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IanWilson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IsaacHill&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IsaacPhillips&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IsaacScott&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IsabellaEvans&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IsabellaGreen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IsabellaJohnson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IsabellaRodriguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IsaiahAllen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IsaiahEdwards&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IvanPrasad&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;IvanSuri&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JackEdwards&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JackMitchell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JackSharma&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JacksonEdwards&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JacksonParker&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JacksonPerez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JackYang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JackZimmerman&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JaclynRai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JacobBrown&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JacquelineMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JacquelineWard&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JacquelynVazquez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JadaCarter&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JaimeChande&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JaimeRaje&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JaimeSerrano&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JamesBryant&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JamesJai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JamesMiller&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JamesMitchell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JamesPtaszynski&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JamieHu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JamieMuÃ±oz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JanelleChandra&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JanJames&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JaredMoyer&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JaredWard&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JarredGill&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JarrodPerez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JarrodRaman&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasmineAlexander&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasmineBailey&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasmineJackson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasmineKelly&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasmineRodriguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasmineRogers&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasmineRoss&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasmineWard&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasonLopez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JasonPowell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JavierSanz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JayHernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JaySanchez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JefferyZhou&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JenniferBarnes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JenniferBryant&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JenniferClark&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JenniferGonzales&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JenniferLong&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JenniferMiller&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JenniferRoss&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JenniferYoung&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JennyWagner&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JeremiahJenkins&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JeremyCook&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JermaineWeber&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JerryChander&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JerryYuan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JesseAllen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JessicaClark&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JessicaDavis&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JessicaHarris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JessicaJones&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JessicaPerry&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JimmyGomez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JimmyNavarro&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JoannaSuarez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JocelynPerry&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JonathanGonzales&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JonathanPerry&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JonathanShan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JonathanTaylor&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JonathanYoung&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JonZhao&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JordynPatterson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JorgeYang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JosÃ©Jackson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JosephBrown&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JosephThomas&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JoseYoung&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JoshuaGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JoshuaRobinson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JoshuaTaylor&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JuanCooper&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JuanMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JuliaGonzales&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JuliaMiller&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JuliaThompson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JustinAnderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JustinBrown&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JustinBryant&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JustinFlores&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JustinGriffin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JustinJai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JustinLal&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;JustinMartinez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KaitlynRussell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KaitlynWhite&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KarenGao&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KariCarlson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KariPerez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KariVance&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KarlDeng&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KarlNath&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KatelynBailey&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KatelynJames&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KateNath&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KateXie&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KatherineJames&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KatherineRodriguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KathleenMunoz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KatrinaDeng&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KatrinaKumar&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KatrinaYuan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KaylaFlores&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KaylaMoore&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KaylaRodriguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KayleeSanchez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KellieBlanco&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KellieOrtega&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KelliShen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KelliWang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KelvinCai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KristenLiu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KristiSchmidt&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KristyHernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;KyleRoss&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LanceJimenez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LanceRuiz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LatashaRowe&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LatoyaLal&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LatoyaLuo&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LauraCai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LauraChen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LauraLiang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LaurenBrown&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LaurenThomas&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LaurenWilliams&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LeahHuang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LeslieVazquez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LeviGonzalez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LindseyYuan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LisaLiu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LoganGriffin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LouisLiu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LucasBlue&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LucasButler&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LucasHill&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LucasMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LucasPrice&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LucasWood&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LuisEdwards&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LuisHall&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LuisSharma&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LukeWang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;LydiaGonzalez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MadelineGreen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MadelineHernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MadisonDavis&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MadisonLewis&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MadisonRussell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MandyZhao&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarcGill&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarcoChandra&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarcoGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarcoSubram&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarcusJames&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarcusLopez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarcusRodriguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MariaAlexander&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MariaCox&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MariahGonzales&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MariahMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MariahWatson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarieAlvarez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarieGill&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarissaBennett&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarissaGonzales&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarshallHuang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarshallLal&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarthaChow&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarthaLi&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MartinFernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarvinJohnsen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MarvinRamos&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MaryEvans&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MaryRoberts&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MasonKing&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MasonMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MasonRivera&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MasonWatson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MatthewJohnson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MatthewSmith&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MauriceSharma&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MeaganSuri&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MeganAlexander&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MelanieAlexander&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MelanieBrooks&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MelaniePrice&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MelanieStewart&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MelissaLong&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MelissaMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MelodyBrowning&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MelvinRaji&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MeredithMehta&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MichaelRothkugel&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MicheleChandra&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MicheleGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MicheleYuan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MiguelDavis&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MiguelGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MiguelGonzalez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MiguelMartinez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MiguelMitchell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MiguelNelson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MiguelPerry&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MindyLuo&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MindyXie&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MirandaButler&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MirandaPrice&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MitchellLuo&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MitchellRai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MitchellShan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MollyChandra&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MonicaLopez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MonicaMehta&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MorganAllen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MorganAnderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MorganHenderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MorganHoward&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MunirajuPulipalyam&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;MyaRussell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NaomiAlvarez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NatalieBrooks&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NatalieRoberts&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NatalieThomas&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NathanielGray&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NathanMartinez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NathanMitchell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NathanParker&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NeilCarlson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NicoleBennett&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NicoleHoward&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NicoleMurphy&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NinaRaje&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NoahBrown&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;NoahPerez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;OliviaFoster&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;OliviaGray&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;OliviaJackson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;OliviaReed&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;OmarBlack&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PaigeHoward&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PaigePowell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PaigeRamirez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PatrickBlue&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PatrickCook&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PedroGill&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PeterRaje&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PhilipOrtega&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PhillipSullivan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PrestonPatel&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;PriscillaLal&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RachaelMartinez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RachaelSmith&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RachelCox&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RachelFoster&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RachelJohnson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RachelJones&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RachelLee&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RachelRobinson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RachelWashington&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RebeccaKing&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RebeccaNicholls&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RebeccaWright&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RebekahSai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ReginaldGomez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ReginaldRuiz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RichardBrooks&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RichardThompson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RichardTurner&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RichardWard&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RickyJimenez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RileyColeman&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RileyLong&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RobertBryant&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RobertCampbell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RobertChen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RobertHayes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RobertMoore&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RobertSmith&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RobinRomero&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RobynTorres&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RogerDeng&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RogerSun&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RolandoSmith&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RonaldPatel&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RossDiaz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RoyCarlson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RubenGill&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RussellGoel&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RyanHayes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;RyanLong&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SamanthaAnderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SamanthaGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SamanthaWilliams&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SamuelHughes&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SamuelLong&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SamuelThomas&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SandraWu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SandraZhou&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SaraGonzalez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SaraJames&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SaraNelson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SavannahEvans&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SavannahPeterson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SavannahRivera&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SavannahTravers&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SeanEdwards&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SeanGonzalez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SebastianMorgan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SebastianRogers&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SergioFernandez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SethBennett&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SethButler&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SethCarter&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SethEvans&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SethHoward&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SethLewis&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SethPowell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ShaneSubram&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SheilaDiaz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ShelbyCox&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ShelbyGray&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ShelbyReed&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ShelbySanders&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SierraEdwards&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SierraGonzalez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SierraPhillips&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SophiaHall&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;StacyCarlson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;StanleyPrasad&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;StevenRamirez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;StevenThorpe&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SuzanneWang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SydneyMorris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SydneyRogers&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SydneyScott&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SydneySmith&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;SylviaSpencer&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TabithaDominguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TamaraLu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TamaraTang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TanyaDominguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TaraShe&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TaylorCooper&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TaylorMartin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TaylorWalker&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TeresaGill&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TerryBlack&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ThomasAdams&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ThomasBryant&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ThomasChen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ThomasGonzales&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ThomasRobinson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ThomasYoung&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TimothyEvans&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TimothyGreen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TimothyNelson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TimothyPeterson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TimothyYoung&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TracySimpson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TracyYuan&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TrevorFlores&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TrishaChen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TrishaHu&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TristanWashington&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TylerDavis&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;TyroneGill&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ValerieCai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ValerieLi&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VanessaPowell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VictoriaBailey&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VictoriaDiaz&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VictoriaGarcia&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VictoriaGriffin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VictoriaHenderson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VictoriaSanchez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VictoriaSimmons&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VincentGao&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VincentZhang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;VincentZhao&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WarrenTang&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WarrenYe&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WhitneyRodriguez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WilliamMiller&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WilliamWilliams&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WillieLin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WillieLuo&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WyattAllen&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WyattBaker&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WyattCollins&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WyattGriffin&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;WyattRussell&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;XavierBrown&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;XavierGonzalez&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;XavierGray&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;XavierHarris&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;XavierLee&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;XavierRobinson&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ZacharyColeman&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ZacharyFoster&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ZacharyJai&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ZacharyWhite&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='&quot;ZoeRogers&quot;' />
                    <groupfilter function='member' level='[none:customername:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([salesamount])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2021' />
                  <groupfilter function='member' level='[yr:orderdatekey:ok]' member='2022' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</column>
            <column>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:customername:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' />
              <text column='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:customername:nk]</rows>
        <cols>[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]</cols>
      </table>
      <simple-id uuid='{FC929365-CC17-4B9D-BF75-7A4D1A2BE7DE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1169' maxwidth='827' minheight='1169' minwidth='827' preset-index='15' sizing-mode='fixed' />
      <datasources>
        <datasource caption='internetsales+' name='federated.1ahy4w109n5p8g1agj4ao170flw0' />
      </datasources>
      <datasource-dependencies datasource='federated.1ahy4w109n5p8g1agj4ao170flw0'>
        <column-instance column='[productcategories]' derivation='None' name='[none:productcategories:nk]' pivot='key' type='nominal' />
        <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
        <column caption='Productcategories' datatype='string' name='[productcategories]' role='dimension' type='nominal' />
        <column-instance column='[orderdatekey]' derivation='Year' name='[yr:orderdatekey:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone forceUpdate='true' h='4962' id='3' type-v2='text' w='66747' x='8827' y='1112'>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold' fontsize='16'>SALES DATA ANALYSIS</run>
          </formatted-text>
        </zone>
        <zone h='29170' id='14' name='PRODUCTS BY SALES AMOUNT' w='56711' x='1814' y='9666' />
        <zone h='4448' id='16' mode='checkdropdown' name='PRODUCTS BY SALES AMOUNT' param='[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]' type-v2='filter' values='database' w='19347' x='73881' y='8212' />
        <zone h='28400' id='17' name='TOP CUSTOMERS ' w='50060' x='1330' y='37981' />
        <zone h='44654' id='18' name='PRODUST CATEGORY VS SALES AMOUNT' w='31197' x='61548' y='33618' />
        <zone h='28657' id='19' name='SALES VS BUDGET' w='59613' x='1935' y='66809' />
        <zone h='18820' id='20' name='SALES BY REGION' w='75453' x='16324' y='98631' />
        <zone h='4363' id='21' mode='checkdropdown' name='PRODUST CATEGORY VS SALES AMOUNT' param='[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:productcategories:nk]' type-v2='filter' values='database' w='19347' x='74244' y='13430' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98632' id='40' param='vert' type-v2='layout-flow' w='98066' x='967' y='684'>
                <zone forceUpdate='true' h='4962' id='3' type-v2='text' w='66747' x='8827' y='1112'>
                  <formatted-text>
                    <run fontalignment='1' fontname='Tableau Bold' fontsize='16'>SALES DATA ANALYSIS</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4448' id='16' mode='checkdropdown' name='PRODUCTS BY SALES AMOUNT' param='[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]' type-v2='filter' values='database' w='19347' x='73881' y='8212'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29170' id='14' is-fixed='true' name='PRODUCTS BY SALES AMOUNT' w='56711' x='1814' y='9666'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4363' id='21' mode='checkdropdown' name='PRODUST CATEGORY VS SALES AMOUNT' param='[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:productcategories:nk]' type-v2='filter' values='database' w='19347' x='74244' y='13430'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44654' id='18' is-fixed='true' name='PRODUST CATEGORY VS SALES AMOUNT' w='31197' x='61548' y='33618'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28400' id='17' is-fixed='true' name='TOP CUSTOMERS ' w='50060' x='1330' y='37981'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28657' id='19' is-fixed='true' name='SALES VS BUDGET' w='59613' x='1935' y='66809'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='18820' id='20' is-fixed='true' name='SALES BY REGION' w='75453' x='16324' y='98631'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A91DC147-6B16-40A4-AFAD-C85E84C5D022}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='PRODUCTS BY SALES AMOUNT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:englishproductname:nk]</field>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8823763-A593-4614-A094-C8A40D4AD176}' />
    </window>
    <window class='worksheet' name='TOP CUSTOMERS '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:customername:nk]</field>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81E40D1A-3309-4A77-B691-7A3637E77AA3}' />
    </window>
    <window class='worksheet' maximized='true' name='SALES VS BUDGET'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:Budget:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[:Measure Names]</field>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:month:nk]</field>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B69999AF-3054-436B-BC52-3B395D01861A}' />
    </window>
    <window class='worksheet' name='SALES BY REGION'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:countryname:nk]</field>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1366B883-CB68-4E32-87AF-175A4B4A144D}' />
    </window>
    <window class='worksheet' name='PRODUST CATEGORY VS SALES AMOUNT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ahy4w109n5p8g1agj4ao170flw0].[sum:salesamount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[none:productcategories:nk]</field>
            <field>[federated.1ahy4w109n5p8g1agj4ao170flw0].[yr:orderdatekey:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5A32026-7F47-4144-879F-B34099218045}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='PRODUCTS BY SALES AMOUNT' />
        <viewpoint name='PRODUST CATEGORY VS SALES AMOUNT'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SALES BY REGION'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SALES VS BUDGET'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TOP CUSTOMERS ' />
      </viewpoints>
      <active id='21' />
      <device-preview selected='Desktop' visible='true'>
        <device name='Large Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{593BCDAB-F469-4362-ADC4-761324A35605}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5Rc53mg+dxQOcfu6oROyKGRCBDMEkVR0bZk79HaYzmO18eeXc8c+8za
      M+uZ0Xqs8Y/xjsM4jBxky6ItywokJTEDDGACERpA5xyru6urunKum/ZHNxsEkUlEop5zcNBd
      4d73u33fe7/nfkkwDMOgTp27FPFWB1Cnzq2kngB17mrqCVDnrqaeAHXuauoJUOeupp4Ade5q
      6glQ565G+spXvvKVWx3E9UKplnjr9dcYHJ3A7QvitFuZGj7L6++coa2zE5Oo8NKLR2nvaEcU
      BIbPHuft46cYHR3FMDtxmuHoa68wOjmLP9yIzWJCr+T44bMvMDY2Tg0T4YAXQRCYGjnLG8dO
      09rRTTY2w+FXX2d0dJTR8QkaWzqgkubZFw4j2b34Pc71GLPxKC8eeRWHvxG3w0rvsdeYjRdp
      joQ58eZruEJNmGV485WXmE0UaGtuJL+yQO/wLK1NDawsTnNmNEpLpIGl2VGmlnJYjBKvvnaU
      6FKSSFMTfSfeAHsAWStx9NVXGZ+eIxBaLU+d8/lI3QGO/OCfWchDayRIKpMDDI688ByTY2cZ
      mloGFF4+chR9re1vtP8UqsnDli1bCPncPPVPf0tR9NAYcJHJFgAwqjleOzHApu4Ojjz5Td48
      O4Fh6Lz84nOMjw4wPLWI3e2juy3EK2+eZsvmzVhMIiNnTjA5Ocnho8fOi/H0O68zOTnJG8fP
      AnDmnTf57ne/Q7pY4+Tbb5Avq1Qyyxw9fobXXnqBsqKTTy7yzukhALyBIK8//xSLqSxPP/k0
      Xp+bv/7aXxOItGMTVUo1jbPH3yCWKvL9J/6GqtlH2OsgmyvetL/DncRHKgGCoTBjA6dZySt0
      bWhGKaywWDLz8Xv3MDDQz8WavJeiM4yMjJDKFQk3hBk4fYKiZmJDU2j9M7LFzuat2/nsJx+h
      9/QZ1FKaaFbmsft30z8wiN3lpauzDclkZdPGbqyySP/AEB//9OdYnhiiqq3u2TBUBkan+PRn
      P8X4YD+6ASBzz64uXnurd31/kyMDbNh2D61ekamFlfPilS0uPv/4/fz9//ozHG09tDX4CHkd
      nDx5EkeoGZ/93FU+FA7T33uCMlZaI4Hreag/MnykEmDfw5/l13/pp4lP9PLtH77M1OggNaXK
      yFSU4cEBdP3C70Ra2tm6dSsBr4uPff5n+MX//fOMnnyFZ149+b5PGlQqZSwWK9Mj/dQ0heGJ
      eYb6+9Hel1lqNcfIZJSRwQGqhRWmF1MAlNPLzCxmGBocIrs8TSxTBmD3oYcZ732DYk0DDPr7
      +0nF5siUavQPDF8Q89a992MUcjz8yP0IiPzCv/lNHn9wP8995xv0TS2vf+6xL3yZn/upzzB0
      7CWef+PMhzm0H1k+Ugnw0g++zeHX3yGdK+H3++jv6+Pe+x9m78EH8aorRNMlqBX40Q9/yKmB
      MWD1DjA0NEQ8meGpb/09r79zhnyxit/vXd9uJZvgqSe/z5MvHePRhw/R1z/AvQ88xJ4D9xMU
      08wlCufFsTAxjKd9J3t37eDg3m30D44AMD7UR+eue9i5Yxe7t7QyNDoFgGz1cGBbMxPRFFo1
      z8RCnkcevI9HHn6Q8cHVBEssTPH0008TTWQRJAmzZEKWRdBK/M3X/oq+4XFUQ8bttK3H8f1/
      +jpvnjhLoazg97lv9OG/IxE+Sp3hNLVGdD6KyeYi0hBkcX6GQGQDVpNIIraAxeUlubSEahi4
      vAFMRoVUdrVu7A814rGbmJ+PYvcEaAj6ADDUKhPTcwiCSKSlFYfFxEJ0lkBjK1aTtLbdAE6L
      wEw0Tmd7K7l0ghoWgj435UKWVKFGc2OIVCKGYHXjc9kpZFMUFQGjWsATiiDpFWajyzQ3NZJI
      ZtnQ2oShq8zOLxAO+llYjAHQ2NyGy25mfmaWcEsrFlmiVMixFIsTaGjC67ITW5jD6W/EImpE
      o4s4vAFCAS/CLfvL3L58pBKgTp1r5SNVBapT51qpJ0Cdu5p6AtS5q6knQJ27mnoC1LmrqSdA
      nbuaegLUuaupJ0Cdu5p6AtS5q6knQJ27mnoC1LmhHH/7bfKZGP2js1f8bGZ5lh+9eBRdrfGj
      7/8zh984yXs76hw/+f4euqucPHl8/efY0gLKu91ztTInewcvu0/5ykWoU+eD47NU+eof/g0/
      99M/xv/3h3/Ixz/zOU68/DwdO/cw8M5pfuoXfonR4y8wPJ/BoaZRG3YxP/QWVXc3qaG3+M7i
      KIItRHFpnKGlAtnFKSYSNRqsBpZQI/NjQyTKBpX0Mmdnc+SjvWw9+BmWJvro2LaLkf5hkpkk
      S+P9uCLtyJIZs6DwqU9/BkGo3wHq3GC6d91LpKmBWmKGZK5I3ztvMr0YY2xknGDLVlrDLqZm
      o8hKHn94AwcP7Mfu8jE72kc8U6FcyPHwffuJ52q4HRb6+/tIJhZZTBS5d+8mipoZu1mkt7eX
      qeFRNnRvxmuD8dkYiwsLjPf3YgjQNzrFQjxDbWWMkuBGWOsaW+8NWufGYugsLSdoDAcYHxsj
      3NRMMpHA6XAhyRaCQS/FXIp4pkLIbUWwunBYZRbnZ5DtfiS9gifQQDw6Q1UwEXJbicaz+FwO
      Qo1hojPTiGYbklajZsgEfQ6SuSqikkeyexAR0DUVUa9SFcy88J0n+MzP/Z80+1bHTdQToM5d
      Tb0KVOfGYmgsLC5hGDrz89H1l8v5HIpmYBgGuWx2/fVqKU9VvcjY1TWUSplyVblu4V0gwZqq
      ouk6oiQhSyKqoqIbBrIsI4oihmGgaSogIssShqGjKCqCICLLMoJgoGsGorT6WcMwEEURXdPQ
      dB1JklBVdX1/JpMJXdPQDZBlCUEQ1rcJAiaTjGHoCIKIIAhomoYorv6s6zqqqiKbTIiCsBab
      jixLYBhouoEkrea4otQwDFbjNMnomoquG2sxr1UIDQNV05BlGcMwUFUVk2l1kLmuaRgISJKI
      rmuomo5JlhEELigvhoEhCEji6mcBVFVbK7GAyWRar4N+5NEUjh8/yScfPcSxk/1IoohNhuXY
      MgWlSKLqZndHkPRKjES6SNhrwnA0kViYpnvLTsq5JB6XlUyuTHRxiaaAl4Ii0dAUppLLkE4l
      sPvC5JYXCW/YSGPQc03hXTAv0L986x8QJBODp09g8rfw9D8/gcli4cTxk7R1bWJ66CQjM0vE
      o1Mky+CoRPnHF3oRqhlGZxZob2vg+edeZuOmLorpaY6dXcZnqfDGibOUCll0A+bnpvnud5/G
      5fGi5Fc4NTRJLh3HkO24HTbS0UG+98IpJKNMb/8oXrHIiYkV2iN+nn76R2zaugVBq/Dcc4ep
      VSsks0XCQT+zA8f42ncPc9+B3Yi1FE8+f4Jtm9sB+Lu//gssNif5UhWpusLRkyOUsikUTHhc
      DgBSs2f5r3/5FB9/8B4Ew+A///vfYOeDj+MwCzz75BOcGo2zqdXDC4ffpFou0D88RWdHC88/
      9xIbN3VTLS5y9O1plkbf4ujwEru2dHLkuecIRcJMjo3w3Sefwe3xEAgGEe+WBNBVyuUcYxPL
      hBsDVAslqOQoagK+gA9/wwZSsTkQRZr8NhYSeVaWllFEsNpcmJQcZ8eiOO1mUrEoJVUEpYZg
      tbE01s9ssoTdagVdRTBZ8Hlc1xTeBVUgk83Frl27OLS7m7GZGC5fiF27etjgMxHP1xiZXubB
      Qwc4eN+DzI2tPmNt69zI/gP3YiknSJYvvH0dO3GGhx55iJ7de2huamLXrp00N7ewc/tW8qk4
      3oZW9uzdT3PYt/6d1s6N7Nq1k2oxR0PnDooLI/SdfItNew8hCQJ6rUxBEdmxq4cdW7oBGJqJ
      8/GdzcytXDgHjj/UxK5du9jc3U5uZRlnsJnde/fS9p7pT97pm+XLj21mYD4DwL0PHOLsydMY
      ugJWNzYJTr11jHsffYzde/biJUu8eGF5JdlOm1diNp4DwObysWvnDppbWtmxbQvy3VTxFGXa
      OjbT0dFCe3OEUMBFoqQTiUQIhZvIx+eJRCKUsinmkzU2dXewo2c7NlnG7bQTbmmjMRzG67Dh
      8AZpbmmmtaON5MIswY6tdDUF8HjcSJKIxWK55vAuqALVSjlOnTpJsVjmvkP38a1Th/nR00/h
      DLWw0ytx+l1nFoQLbuN2i0yxdGH9rKJomC9xyduy/0FGBs7y8uFhNu68h7bG1SSYGRvmtfwM
      /sZWDAQevn8v33j6GP/mXz8EgGT38/GD23jj6KtYPWEO7OokXzF46NBmXninl45PbD9vPyux
      eU6dOoXDE2TLzvuoDfXxypGXaNu8h+7WEBg6uXKV7h0P8v1n3mBny2eQ7AH0corY+Fmat+xl
      emCEfFnFYVk9g51WmVJF42LsuOc+3n75Fax308l+MUSZoN9P0O9ff6m5vWv95907twDg9rix
      2ezrr/v371//ecumTgD2NTSvvxYIrM1ztKFl9f+Wpg8W3vtfMNvd7Nu3n4ceehCbScATaOTh
      Bw6wFF1A0UWskk6+olItpBHMjvXv6arCfLpGs9+OplXRdIOVxWU8YT8djR7GoisYuo6mnX/C
      lEslNm7r4aH79tLff67Vrn3TVh559JMUludQDXCFG+hsalxPOq1Wxe5v4KGHH2Z5boKZobM4
      g2Gml/KUs0to75sGK9jYyr59+9jSvYFSsUjH5p088rGHGDqz2rqYmutHcDQwNrlApZxb+7ZA
      i9fM4cEVtm9YTcztm5rpG5zF0HWmE2WafRY0rYamG6QWFnE3rN5RRNnClhY3w7PnT2xV5+K8
      9+S/mVzgAJIoEQwGz/0uSTS1ttPe6GZ+ucA9e3YwcPYs8VSeQ4cOIosS0fk50qkkew4cwm4x
      EQl56R8YRjF56NnSTkPzBhJz48wtLGJz+bBZTEiSTDAYoFzI0D84RDyZ554DezHLEggCi9E5
      kitxmjtXpy0EECX53Hw9hsZQfx8Li0ts3NaDIYjs6dlFpLEBr8OKze0jGVsklUpic/koZ+Mk
      kmlSuRJep4m+/kGWYgn2HzyExSSRSBbYd2APTY0NNLqtCE4/NrPExs2bqFUNWpoakGUTHZu2
      UU7NMz03z+ad+/A6bTQ3+OnrH6IkONi3owtREnF7/YQbIxSyaTq7OhEBSTIRDPipc/tQbweo
      c1dzt9dQ69zl1BOgzl1NPQHq3HDGh87SNzTOxSrbsYV5lPc9SdY0bX0K+3MY5zWgXopCJkE8
      nb/q2OrdoevccF586QV0RWE+ej9WuwUhF0Nzt+Inw3eeOsyPfekLBOwODLOV48feIb88jblt
      L5s8CpZgB7PDJ2nbuJknvv4tfvnXfoX+vgE++djDHH7xMDv33cf00HFatu4jNzeJhoq9cSMv
      DZzg3oc/xluvHOHBT3+R9kbvRWOrS3CdG84f/cF/onP3x6gsDrPnsZ/gyIsvolVyGJqJgF1A
      NYu4LW6mluIcfOzHqE6+g2/TPt44+gY//dkHeOal1ylJFoR8lYhPI16CUqbAln27mB4exRlq
      J7syTiUn8eOPbePZt4dQsRAJeYjPz3Ho8Z/kwI6Oi8b2kVoiqc7ticPj5+EHDmE2W2jr7EIo
      rNDQtZvuiIMCDvb1bGdpJcfHH3uMsbMn6dl/D1Ozi2xqdJCuydQqZbbt2E3QrtK0sYd0Msm+
      vdv51je/yY77PoNfzLLzwMN0trXS1NRIU8dWlEyM7s3bqJTLbN/Vg9thvWhs9TtAnTuSainH
      1Nwy3Ru7MEkfXGXvqATQNA39Ml1lr3l7uoYkStdlWwYGhr7a8/VqkGQJ8TJ/OH1tOZur3d7t
      jKHr6AarQxDXymPo+npru3gLewaeL8GGwdjEBBu7uxkZGWXr1i0X/5ahUyxVcDhWm6+1WoUa
      Mjbzuc0tRWfJllSaQh6isSSdHa1MT07TtKELm6QwPjmPyxfAbpYIhoLnbT6dTuPz+Xg/ycUk
      X/+dr3/IIt8ePP6Lj7PnE3tudRg3hVJigiPDBVq9Al2dnVhNIsn4IomKiFX2sKkrfMtie99T
      IIN0fJFsyMtyqoBrZpJ0rojZ5aWr0cXCUppEvoLPaWZmbpHdu7YxPzdLpLERRTKxEo3hDYVo
      agwSbmwiNzrGUhI6W0IMDwzTvWsX8egCjQEb5XINwVSgio6ulFlI5Aj77FQME0atSK5Qpq21
      qb6qyUeAZKaIWkzQO58iOj9L2GVmpSxgSDKtTV3ArUuAC+6v4aYm+vomiITcFCs1gi4z6WyR
      bCZNuVKlqa0DSTYRaWwgl06iVoskU1mqikpj8wZQyiQSKSbHR2lo60A2VNLZHDa7jWwqhYEM
      gkhTSxuaUgEgsbJCejlOplylMRSgmM+iaPrqrVPT0HWdO6imVud9hBsbuf/BR2hvibB9czeq
      aGH79m1s37b9lveNOt8BDINqrYaqqkiShIROMl8m6LGTSGXxeTyIJguGplLMZzBbbRSKZTxu
      F4IkIQmrI6AsFjPLSwtUFGiKhEmmsjSEA8SX4wTCDQi6QjS6iC/UgFkSqFWK1DQRj8tGKlvE
      63ai6xqpdAafx4MgCpgtNnIrGQ5/4/B1K7xhGOdGg33YbWGAwVVvb+9je+na3XXJ9z9KDnA7
      c0dJsKqq11eCNQ1Juk4SbBjoa0M+rxVJlpDk879XT4Cbw2UkeIStW7de/FvXJMFuorEUHe2t
      zExdnQSn0mn8F5HglYUV/vLf/tmHLPLtx+d//cfZ8dBO3nzzTR599FE0TeOtt97CarXi9/uJ
      x+NEIhHGx8c5ePAgTqeTV199lfvvvx9FUejr6yMQCDA/P89DDz2E2Wy+1UW6Y7iIBC+tSXDx
      KiR4K/Ozc0Qi75Hg4GUkuOfSEhxdk+CqYcKoFcgXSrS1Nt+VEixJEj6fj4WFBUZGRmhubiYQ
      CNDX10exWMRut2M2m6nVapw5c4ZqtcqBAwdYXFykVqvVE+AauIgERy6U4FyRTCZ1vgQ3NJBL
      p1Br75NgtcxK8l0Jbl+V4EwOm8NGJpnCEN6V4NbzJDgTj5MtV2kIBSgV8iiqsTqThKah69pH
      XoJlWaZWq1Gr1ahWq/j9fvL5PIFAAJvNRjwep6Ojg3g8DqxWufL5PMVikeHhYY4ePUpXVxd2
      +60ZWXWncqEEKzVUZU2CBZ1UrkzA41iTYPe6BJcKWUwWK4VSGY/rvRKsY7GYiC8tUlENIo1h
      kukcDSE/iTUJRldYiC7hDYUxSwJKpURVE/G4rJeX4ESaZ//6metW+OspwWCsTbty7ds7+Nl7
      CbQHmZycxOl0YrfbKRQK+P1+HA4HiUQCn89HNBrF7XZjtVqJRqN4PB66u7vJ5/PE43EymQw7
      d+6s3wGugTtOgjXl4oPQPwjXU4IxDHTj6luC34soiZjMpvNeq0vwzeEDS3ChVMF5JQkuqkTC
      bhbeI8GRDV3YpRrjk1FcvgA2s0goFDpv85eT4D//v/70Qxb59mPXwz38b7/1pVsdxl3JxSU4
      6GU5VcI5M0nmPAlOkchXz0nwzq3Mzc0SiURQ1yTYEwy+R4LHiSVz75HgHuLRKKb3SbChlInG
      c4T9dqqGGaN6d0twnZvHxSW4f4JIyEWpUiPwrgSnU5QrtTUJNq9KcCaJViuReo8EC2qFVDLD
      xNgI4dYNyIZKKpNdk+CVdQmONL9XgpNkEwmy5dqqBBfPl2BN++hLcJ1bw0UkWEFVlPdIcIWA
      x85KOovXvSbBukopn8VksVEslfG4nAiShChIay3BJuKxRSoKRBpDpNI5wqEAiXicQCgMusLi
      whLeYAMmCZRqiar6rgSX8Lod6LpOKp3G5/UiCGC22Mgm0jz7Vz+6boW/vhL8wbfXvqODB77w
      4Hmv1R3g5nB3S7CqXdAC+0ExDANjbVLha0E2yReNoZ4AN4cLxgQnlucRrQGEaoaaYKcxdPGx
      lKVCAavTuV6HKhSLOB3nZopTKkUmZ+bxhRoopuJY3AFEpUhREejqaGNpbppibbWvkFItYnOH
      sVxhhHJyMcnXfvMvP3Bhb0c++6ufY/uDO3jjjTf4xCc+ga7rvPXWW5jNZsxmM+l0mtbWVqan
      p3nooYewWCxMT0+jKArVahVN07BYLCwsLNRbgT8AF5xyxYqGXlrGUEvoWp740jwujwdRlEDX
      qJbzFGtAKYtvQzdCKUNBEXHazSxH5yiUVTZt34xJthAJ+4mvJLC6/FQKaUDCLhpUNMjmsriC
      zeRWkiiUSedr+Nw2VlIZ8tkM3kCQXK7M9u2bke+CqZTfrTqJoojf72d2dpaenh6mpqao1Wq0
      trYyOjrKli1bmJycxG63MzQ0xNatW2lpaWFwcBBFUeoJcI1c5P4qIOg1RNmKVilgcYeolosU
      C3nSmQxmmxOfx4nPH8DvdZFMZ0nEE1SqVWSLnYjXTS6fI70SYyFZorW5cbVlV9FRalUKlRqy
      CJGWDWSX58kVqxiA1+tiYGgCQSmjy2bQdVo3bEAw9I+8BEuSRKVSWf/n9XopFosYhoHNZqOj
      o4P+/n48Hg+JRIJqtcrU1BSRSIRqtbreclwoFG51Ue44LnCAaq2GaGjoogl0nUI2jcMboJRL
      IZod2KyrDTayYJDKlZAMBcniwGKSEAURAZAsZtRykVgiidsbQFDLmBweRLVCWRPwuZ3k0klq
      hozbbgERJNlKuVTAYbcRiy3jCwSRZRmlWoE1Cc6tZHjh689ft8LfDi3B93zqHgLtQaampnA4
      HNhsNsrlMh6PB0VRUBQFv99PKpXCbDbjdDpxu92Uy2UqlQq1Wg1RFMlms2zcuPG6Sv3dQF2C
      r6sEG5cd5/suJovpinJbl+Cbw8Ul2BJAqKWpCY5LSnCxUMB2NRIcbKCYjmNxBRDVcxK8ODdN
      6RolOB1L883/9M0PXNjbhZ//6s8TaArc6jDqcEUJLrC8uCrBknROggs1ENYlOE1ekXC9K8Gl
      VQmWZQuRsO+cBBfPl+BcLosrcE6CU7kafo+NlWSGXC6NLxC6qyS4zq3hItdcAUGvIshWlFIG
      q6eZWiWNZgjUqjV8Pg9+GwhWGZ/HycTCLLmyhqkxgNViJ2KBXDGHWK0Qz6l0NTcyu5jA0HQw
      VDQgJEKkuY2FuRlkkwurA3w+NwMDw0QCDpCt75PgelWgzo3hggRoikQQ1iW4lUIujaN5I6Vs
      CsniwGZZlWBJNEhny7S3tyNZ7FjMMqIgrEqweVWCy7UkFU2iMejFbHcjaBUqqoBJAFEwaGjr
      wm2zgmggyVZ292zHYbexvBzH6w+s9pF/jwSbrCa69lx6HO21cqtags3W+qPK24U7SoLLxTLz
      w/PXbXu6rl+3O8u1Towlm2Q6ezovGxvU73w3mgvuAPOz44iWAFRXqAkemhs8SCYz63NbGzqq
      ZpBJruAKBDEJBogy5VIJh92GoulYLWZq5TxTs1EsNielfBqLw4eoFigpItu2bmZydBBkO5GG
      AMV8Gru/BadldUDNuw062tqave9eVfOpPN/7H9+7qQfoRuHwOPiNv/wNjh07hs1mo6enh/n5
      eQYGBmhubmZ6epru7m6mp6fZu3cvTU1NTE1NMTU1RXd3N319fWzdupWRkRFaW1vZvXv3rS7S
      HcmFC2VjQillMHQVtRxjKJfBahIQZBlB01BqJSqqiFmroFtspObGSZQEImEvRrWCUtMJNIdw
      OHw4rGYEQccTbKZWTIFoJWjXqehgNpsoKRqJxWVEq05xcZ6sWSS5kmRpaYmmDR0YusSObRuR
      PsIOvG3bNsbHxwEIBoNks1lkWeahhx5icHCQbdu2oSirK292dnYyNzdHLBbj8ccf53vf+x6P
      PvooExMTt7IIdzQXJIAoSkh6Fd3qxlDz6OUqotVJIZ1EFcw0hv24AJNWo1IpU9UEHFYzkihi
      cXuxAq6GJiqxGeYTebrbm1lamMNs9yCqBWKKSGgDiIJIpZjH5HAjiwK+UCN9p8+yqb0R0Wwj
      4HVhdwUoFwsIooDF5rgw+jscwzA4e/Ys09PTRCIRyuUyXq8Xs9nMq6++SmtrK2fOnMFms2Gx
      WMhmswwMDHDo0CGef/55tm3bxttvv01jY+OtLsodyx3lAMVskaG3hq7b9q67AxgGonB12zNZ
      TOz++Llqy9LSEpFI5LzYYNUBDMMgFoud936d68MdlQBqTUUvXrgQ9wdF1/QLWm5lpxnRdO2t
      wx9mYqyLxlaX4JvClZdI0jVOnjqJxeFlx5ZuqjUVi9lEpVrFarVSrRRZSZdoaQoxPzNFMlfF
      6zRR0wSCXhfRpWUaWztwGHlGF7I4HXbMskBLpBHNEDBJIjVVI5VK0hAOr59ApVySoall9u7o
      4tjxM9x730H0mkZxPH1DD4hzS4CZ+Vmmp6fZuXPneie0xcVFDhw4QGNjI6+//jrJZJKenh7G
      x8eJRCIsLS3R3t7Opk2bbmh8da4vV7FGmEG1WsXsgOnJcTRNxWz3MjbcR0trN4JZxFANZnWN
      oN9PUclgtUgUkmkWajrbd2xhZjaOzaGhqiqqqmNoKvPTYwzPJtnYFsbhDRKLTlNVoaM1gqFr
      TM/FMEsGU5NTWK1WVO36TYl4JQYGBrDZbBSLRdxuN36/H5/Pty6j5XKZUqlEMBikt7eXrq4u
      nE4nHo/npsVY5/pwFfdXgXBjBJOhYwgi1ZpKPp8n0hxBqynUqjVki40NzQ309Q0gSyKCKKDr
      Gi67mYGBEWxOJ4gioiRhGDqSKFIs1/C7HIiSSLWm4A+GUaoVsrkcYODzeSiWyrg8XpRqmdp1
      7AR3JVpbW9E0jbGxMcbGxhAEgd7eXgYHB4nFYui6jt1uZ2JiAo/Hw8TEBPPz1699os7N4/Zy
      AEMnly/hdjsv+rZaVVDT1eu2u4tJsNlvQzRfvB5vGAbLy8sXfepSd4A7k9srAa6AWlNQMzc2
      Ad6LNXzxRLwY9QS4M7kmCd6+JsFWs0y5UsNms1ItF1jJlC8hwU6iS/ELJViClqbImgQL75Hg
      hnMSnE0yNL1M0CWRK1Tp3rINqaqS7Y/d6GOyjvXR7pu2rzq3hquS4Eq1gtkBMxAZ60QAACAA
      SURBVJPj6JqKye5lbKSflpYuRLOErunMRjWCfh9FJYvtKiV4ZDZJ97oEz1BVRTpaG1cleD6G
      STSo1XRqSg2jPkVWnRvAVUlwQ2PTugRX3pXgpka0tZkJZPOqBPf3DyJLIogCuq7jcqxJsOuc
      BPMeCfa5HIiy9B4JLpPNrkqw3++lXKmg6QZmWUJR1Rt+MOrcfdxeDnAFCVYqCkqieN12dyUH
      sLdefDTcxag7wJ3J7ZUAV0CtKtTS5eu2vYu1BL8fk9OCyWm54rbqCXBnctUSbH63JbiqYLWY
      KFeq2Gw2KuUCyfMkuILHaULRxMtKcPNaS7BZFqkqGul0knAojCyvhjTUfwabJ4TLAouxJJ2b
      t2KqKqR6ozf6mJyHe1OIrFfg7NmziKKIKIooioLJZKJYLPLpT3+aqakpzp49y969exkbG8Pr
      9RKLxWhsbOTAgQM3Nd4618a1S7CuItu8TIz009zSiWiR0dXzJdhulUispIleRoKjM+PrEuz0
      hs6TYACr1Uo+m6N5UzuJVB6zLGFUr18/oGshGAzi8/no7u5mZmaG2dlZ7HY7oVAIRVGIxWL0
      9PQgCAK5XA6/30+pVKJSqdySeOtcPVcpwc2YWJPgqkohn6exKYKuaFQrVWSz/XwJFlYl2OOw
      XFyCJek8Ca7Uau+R4CygIwgSmqYxPNiPIUiry5DeIgzDoFwuY7fbWVlZAaBYLLK4uEgqlcLn
      83Hq1CkqlQoej4dYLIbT6VyvxtS5fbm9HOCKElyjGrt+s59dTXdos9eG2Wu75PvvVnXqDnBn
      cnslwBVQqze3Jdjsu3S3iPdTT4A7k6twgHPUsjFOTSQIBbxsaAqjIyIJBopmYDXLpONRDFcz
      PqvO5MQUmmTBqGSxukOYjQrJbIlNW7cTnR5BUXSCze24LCImixW1ViMWX2FDWwtwToKFWoFs
      cbUlWL7JLcG+fc2YzZe++te587mmBDB0lUpNRRQMRkfHUBHx2yX6xhfZvrEVrVZCUKzoDise
      l4OqYEGlRi6bw2G30NkaIpsvU63WAJFqIcXpd4YJNkSwWMxgnLva2WyrEmw1aShKDeotwXVu
      ANd2fxUlWpoaURUNAR0QKJQrBNxOdAyqNQW3L4DXBqOTUUQMBEFcnd0Blcm5ZVxOKxaHm6Df
      g64bhBoiNEfCqLUaBqxLMKxKsG5Qbwmuc8O4vRzA0MkVSrhdl5bgWrx03XanG/plx/Bawg6k
      K01Yusbt7AD1GaMvze2VAFdA07Tr+se8roPijbVB8ddxe/DhT15BEOoJcBmuyQFuNYIgXPen
      IrfbCXujtlfn4txRd4A6da43d9QdACA6M0EyV6Eh7MdsMlHRZJrCF64qfzEmx4ZRRSt+h0ws
      kaIh0sTS0jK+YBgJhXKpTFdX1xWvurpW48Q7Z9h7aD8TQwMIZidoKkgyVlElV1QIBnzYbBJV
      w0ZjwH3Z7RWyKcZnY2ztjDA8Mc+GDa0sRuexODyIaomSIhDwujGbDASrj4DbftXHq87lueNa
      WWqayIawn1QmTf/ozCUX8LgYVquVci5HqlBjx86NTPVP0LV9G2q5wNxoHyZ3+KqqHKJkJhz0
      oWsqNpcPs2Tga92IWTLQBYm2oJVEusDQ1CINVzj5AZwePw6rCUEQMZtlkssxPOFmJFQE2UzY
      bSKVzjK5kMRfP/mvK3dcAkgozMRW8LjcbOtuIxpLXvV3hbU+SnarxED/GG1bNjAxOIhgttOy
      cTvl5OJVLcan1UosLC4SS6QpZpKUazrJuXHKNR1DqzETL+J329nS3shS/MrzGGWScRYXF0kX
      ykiCgGi2ko5FqWkCWq1MLF3B43bREfGRSOWvurx1rkzdAe5iyqUC5UoNi9WO3W6lmM9SUzTs
      ThdW8+o6EKVCHhURt9OBoWukM1lEyYTH7UIQDKrVGhaLBcPQURQNk0mmkM8iSBbsVplM9t2E
      FfB4vUiigGEYFPM5kM047TYMXadYKuN0OqhWyhRLq2M+RMmEw2oiX1x99O1wurGYZSrlIuWq
      isftRhQF1FqVfLGM2+NBEgUKuSw1VcPhdGE2Satd+K0WdE1F1cFsOlfzv+PuAHWuH8898zTJ
      dIazx15hPJri6SefJJPJ8Mrzz5Ct6oz1HadvdJq5iSGOnR7CyMzw3RffJhad4bnDr2JgcOTw
      ywCo1QSvHT1L79tHmVlYZnpilGyhTCaT5jvf+R7ZbBbdADA4fex1JueXiM7OowKxqbP80V98
      g5puoFQrJBamefrZI+QKRU698RKjc8tkMhlqqsb0yFlOD4yxEl9ifilONb/CCy8fZSWxzIsv
      vYyqGzz19PfJZNK8/MLz5Co1nvnhD1F1g1NvHGEpc/6AqnoC3MVIJivt7Z3s29nNTDSO1eGm
      s7OT9pCdeLbGyEyMg3t3saNnP4noFADBhia2bN9Jg1xiIXdh63w2m8XjD7GjZzc+j5vOzg6C
      wSAdHe2YJAFdqbCYqdKzfQtbtm5CBvqG5/jCozsZmk7g9Pho39BKKNxAW3MjCBKtbe10dnbi
      slsYGJvl3v09hEJhgn4PA6dPs/vgA2zctJlWt8h8qojN4aazs4u2oIOVgsq9PV28dfwUSyUT
      bSHXefHWE+AuRq0U6e09yYmxBA/u20ghneCHT36PJc1PV8iy2hotAMKF7RF2q0SxrJ5bOGVt
      xMYjn/w0udg0zz/7LOli7YJ9GpqK8Z7TTlcrxLMlwo3NDJ8+cWGQuspA32lOnTpFtlhF1w0E
      wyCXS/DSi69TrtWwrFVprGaZqqKRTyf44VPfY9lw0xF00LxpN1Nn3ubQA/df0KOsngCXoJCY
      4dnDR5lbjJPPZahUa7x29CjVSoliuUKlXKRYqlAq5imWKhSLRQqFAvlCEVWpkisUqVWrqKpC
      pVIhl8tRKRc49s5JlJs4z+nlkK0O9u7dzwP334fNJOH0hfjkJz/O8vw0pZqG124ikS1RyafB
      dK5XrKpUGY9X6QrbMAyVqqIRm57F1xIhk8myZccedrUHGJtfuWCfksWBpOQpVBQq5TKxmWFC
      rV0UawKCkqemv09JRZkdu/awb98+PA4LQZeZhVSRlpZmZElky8ZO+odG0TWViaU0bQEnLl+I
      T3z8EeLRWUpVFRBoae9aXZT9fdQl+BJU8wmOvH6Sjdt7mBk4xnJJxucQySwvUJK8RFwGTRv3
      oqbnODGySKC5E6kUQzZZcFpEJHRWsgb7dzdzenAGh78RlBLLsSRf+tJPYTXf+iaY6ekpNrR3
      8u4qtFNTU3R2dlItppiJldjU3sBA/wAqMtt3bMekFnjteD9up4OuzVvwOKxUilmGRsYx271s
      39pNKhZlZmEZi93Nti0bEQWDqakZOjs71verVAoMDo8hW1z4XSb8kQ1YZYHE4hw2fxM2USG6
      nGZDaxPL85NML6UwSSIburfgd5oZGRqkokJbexdBn4vozATLySytHRsJ+93r5SjnVoimamxs
      byI6N0ekte2C1YbqCXAJiuk4A2NTFKtVUksr2L1uzLKAUszT1L0dm17g9NgCdqGGIlhwN23C
      oiQQ0UGpkiuUsZqtqFqZmiGzYdMOkssL5OLLfOzTn8VpNd3qItahngB17nLqDlDnrqaeAHct
      OvPz786xZBCNLlArFzh75jSjE7PoaxUDpVKi78xpRsanV5/jGwYDp09R0Vbff++6CNHpMU6e
      OsWpU73kywrZVJze3l6isfNleGTgDPnK6iPUmfFBlpI5YLWF/e3jvQBUSjnOnO5lJhrDAFaW
      F6mtLRGxuLiIrlQ43TeIASjlPIl0lqG+M7z15pucOHmK+FW2mNcT4K5F5NTJ4+iGQTk5w+D0
      CoePHGHTtp0EHGbefcJ/+PBLbNy2k5DbiqKDrhY4dewoJ/pnATh+4vj6Fs/09rNz3z727duL
      02zw6uvH6enpQeJce4GulOk9cYwTp4cB6B8c4vSpUwBMD5/mpTdOYegKLx1+jc3bd1KMjTM0
      HWN84DTvLg935sxptEqWIy88z3QsQzmzxMhMnG27dpNLxdi6ax9h//nP+y99FOrctbT67Sxk
      KvSeHmb/vu34HBYGhsdwBoKY1577+102+gdHcXiDWCQYP32cfZ/7eeKTZy7YnmFoJFdWWFlJ
      ohkikl5hcnaBUDi8/pnFiT66D36a1NIkAKLZgY0aVc1gainPlrYA5cwSFm8zNrOJbbt6mBkf
      u2j8O/cfYvDkMT7MQ+V6AtzF7Nq3l/7es2QqOn6bzKGPfYruZj8v/vBJkqXVq/bBhz/JprYg
      R555kuW8wvGBCcrxaeZnZ9erQesYOsVCgUKxgC5IfPYnvohdrPHU08+un6TvnBygVkiQiM6s
      72P7xib6BoeRbF4kAURJxtBX6zu6piGIIgbnhokaa20FgmRha5uX4ZnlD3wM1h9GG9UCL776
      5tpvAgce+BhieYUTpwfo3LqLzpYGhs6eYD6WItzcTs/2TYiCAIZBKh5lpSiwqbOFUj7NOyd6
      2bh9Dy0N/rWANUYHz7KYLHHwwF76zvRzz30Hic+MUZV9NAVsnDh+HJMrxOa2IO+c6luNwmTl
      kYceJLk4xcDYLLv27Kch4OHEm69g8rWye1s3I30nSZQlDuzo4Ogb76ADvoYWOsMOTvWPYrI6
      OHDgAA6LxFDfaWLpEvsPHMDjsH7gg/ZRweQMU176Hq4NhxAEGBnswxNoxOOwoKyd3KOD/bgD
      YTxOK7VKDm9kI/fs20e7V+DEwCyaWiORSGC22kEQcTgcmAQBQ1Po6x8iEmnEJLJ6AitlLIE2
      Hjiwnx0tHnr7RgAItW3mB3/xP3n0S79K7+uLWN0NCKVe5qKLzI/1s2PXISzFKP19Z+kK27F6
      Qutl6Nqxn+N/+6c07fv8BzoG0le+8pWvAKBWODs4zF/96Z/R2dNDc9DJb/3m/024uYVv/K//
      SdeeB3nmG39MXHFy9AdPIDduo6s5yNm3X+R3v/L7lExhDvZ08Xu//e+oyA6+8bdf52OPfxab
      SeTF7/wN//j8cfx2CbfPx3//gz/isz/147z97D8zkpR57bt/wXLNRnx2ksbWVqZH+vnrf/gX
      tu/ciUPP8h/+6x/T1ODlz/7sr3jgE4/zJ1/99xwbWOKzn3qYP/q9/8CLp6b5xP52fv+P/45N
      Xe2Y7W4yM6f4pxdOYS4t8v1XBwnpi/ztk0fx2QwKuo2O5vDlj8xdQmtbJ52dG5AlEa/XQy6b
      pX3zLgKu1VZTr89LLpulbdMOgi4rrW0bMJsk7L4wAaeV9rYWCsUyiDIbuzspFoooioLD5cXv
      cZIrlOjZsweztHoVb2ltxWySsTh9hHxO2jdswGK10bV5G+GAm7bWFiwWK51dnZTyOdq6txL2
      OXH6QvidZhTM7Ny2CclkJRIOYjab6dy4leaGEGaTRKS5FbvVwtWOJF2/AwhWN1/8whf4wRPf
      4nNf/AKTL3+P9ns+yZf/1c/QaMrzyuvHAYEde+7Bkh4mnV019817H+KXf3qRvjQo5SzTGZHf
      +5VfpjhzlrH5BAc3h3j2hdf4d//ta3Q1OFFLqQuCcNhtjM3M8pM/+UW6Orto8Vn44Su9/Njn
      PsXTf/Pf+cQXvsy/+omHKSwMc7xvCtnux2erMT87gTOyGcvSaizlfIbh4WG22AI0AU1t3dy7
      P8yZH53FbO0iGV9Edh/i3p4tH+qk+Sjh8gbWf5bNVlrb2s57XzZZznvNsXbGCIKE02kHpx3f
      uU3g8vrP/WJ20+Y8NyBIlEw47Ka174u4nI719zze1YFNLteqvAqiTFNL63mxuL0B3O+OfxJk
      HPbVYBzuc4OiHM6rk9/1mC71htVipVgsAgalUgmLxQLoPPXPf4+5ZR+ff3jv6uestvUORoIg
      gq6iGlCtKasT5SJgMcuUyhVYmycINFTVQKnVkGWZX/y3v8sv/OQn+caffJXTk/Hz4rBYrRSL
      JTAMSsXy6gRawL4dnXz7X55m6+59658NtW3kZ3/2Z3noQA8AZ99+kd/8L3/Cr/3qL7HlwGP8
      4e/9DksDR/nzJ35wTQepzkeXS3ZI2bT/IYR/fJLf/c9fIRqN8dU//D944sxT/Pyv/Rb3bWte
      /9xbL/2A7z7zCsmalZ2b27h/ewO/89u/TbHmZeuGECDy5S//DH/81d+lramRL/3rX2fflhD/
      5T/+P6TiMX73D36Rr/2P3yelWFBkx9p413O9CB987PP84D/+v/yn4ddJFFz8yq52ngF69t3D
      n//DV/jpL32Bp597BYDE3DhPPPEEbVv20m2Hg49+kQPhAn//d9/kc/e08tI7Q1QySe7b33Sj
      jmedO4zzukIYhsHy0hKhpiYkQFOqLMbi+EMNOKxmUitxbC4/tvdMFpVNr5DJrS5b5PYG8Dgt
      LC0t4w81YLOc6++Sz6bIFWs0NjYgGCpLSzGcngAel51atcxyPIHHF8LttKFrCsuJNI2NYQSg
      Wi4SX0nTEIlgliXiyzECwSDL8RUaQgESyQwhv5uFpRiGAVa7C7ddpqwI+D0OFqILBBsjpFeW
      QbbSEPTXpxupA9T7AtW5gRiGRn9vLxZvmE1dG97XF99gYXGJ5qbz78bVSgWzxXqexOq6iqIa
      WMyX70C4FJ0n2NSM6Rrmerr1fXLrfGQxDJWF5SziwiLJ5BJm0UStUsQbbqGSiXFmbJZ7enZi
      NwnogkS2rDDS+zb7H3mc9FKU5rY2ojMz2G0CZ8bT3Lenk0S6SCToZnYhRltrKwsLCzQ2BJmZ
      i2OWRUpKhcWFBA1BD+miwt7dPZje3wf6PdQbwurcUFZiUVo272BlYYkNDQ6whpkY7iWeqRHy
      OZmfm2MpOsuZwXG2b99KpKkFu1BGdIXRiklWEssk8grt7e2cPXUcTVXpHxrF55A5ffoMzW1t
      nOk9gcnTgKiUOXniHRRFpaZqJJaXqSraZeOrV4Hq3DAMQyMajdHa2sTc3DwtzU0MD/bjbWij
      mFykpJvwWiFdrNHSGCaWzNHgtVLSTRRTcVxeD8mVNI2tbSSXlvD5HCTSJeyyyrETvdz3scfJ
      JZZoaW3CkJzo5Swmi8TsfJxIo5/F5RS7du7ELF/6Ol9PgDofius9KfDVUC7myRarNIQCH37y
      4HoC1PkwXO9p4W82dQeoc1dTT4A6dzW3/DGopmqgfrhpQgwDDOPDL3ahaTqSJCKYJETpg23r
      elUJNE27Y6sVdxLXlgCGwcjQIF1btyMLoCtVqoaM7RJLiabiSyTSeZpaN+C6yJwsAFpVJfXW
      3DUHfiNxb2/AFnFRLBZxOBwkk0k8Hg8mk4l0Ok2lUiEQCJBKpQgGg6ysrBAOh6+rCNbV7IOT
      zWapVqsMDw+zZ88e3O5Lz9B9TQmgqWUMQ2MpniIVnaahwY9m8bE0OUSgqY1MMoHd7cOkFkmV
      wWWX8bsdVEt5xkYGaW4MMTE1S3NLK26nDUwu3Kbb8yqXyWT40Y9+xKc+9Sn6+/uRZZkHH3yQ
      w4cPs3nzZhRFYXJyknw+TzgcJhqNsn///lsd9m1JLpfD6XTetCdF4+PjLC8vs23bNoaHhzl4
      8OAlP3tNEcUXFlBEM+mVGN5gA16HmVwqAWYbmWyOYGMzVpNOJl+iXCwgaCqKppHJ5Ii0bKCQ
      zSKh4nB7GZuYw+e5fdfg9fl8tLa2UiwW2bhx43p15P7772dmZgZN0zCZTPT09JDNZslkMrc4
      4tsLXdc5cuQIr776Kt/+9rfRtMs3SF1Puru7cTqdLC4usmfPnst+9pruAMHmdhplGVVVABFJ
      hI1uKBaK2O02RFHCwE/QH0KQzdjMMplsjoaIBwTQvQ4aWtsRDZWGpgiiIKBLAramKy8icTkM
      DDA+/Hpa7y6aJ9tMLC8vE4vFaGtrY3x8nLa2NkZHR8nlcrjdbqLRKJqmIYoikiSxb9++K+/g
      LkIQBNra2ujq6qKlpeWmthP09fVhGAayLF8x8W55O4CmqhjVDynBGOi6gfShJXhVPAVZvGB5
      VF3X16/6l43lOkmwqqrI8i1/RnFFLlVeXdd55pln8Hg82Gw29uzZc9PK8+4FS1EUVFXF6730
      KkLXHJFSSNI3GaOrswO3w4rA6nhPQVhd+KCaT6LZgsi1DAVFwm61YLWYwNBZWk4gCwb+cCPy
      2oSUWlUl+ebtJcG2JjfeHY3nvSaK4k29in0UaGhooLm5mSNHjlyxKnI9EUWRF198kXg8zqOP
      Pnp9E0CrlShWNZT8MienarT4LYxNLdLSEqRWLmG32UhXMjT7LRRrIuW8QSKZxOHy4KBMwnBS
      rMzgd1rQrEFc9XPqtubdCoJhGOsXuff+fzmq1SpnzpwhEAjc1IuHqqpYLBZ27dq1Nqrx0lx7
      VILIhs5u3HYLre0dZDIZJEVBNVlob2tCVXR0TUNb6yOiaRqhSAsWE5Q0CVkr///tndlzG9e9
      5z+nNwCNhcRCEADBTaRIWZJlWba85GYpO56pWA/xe6pSlan7H8zfcF/v41TN69S8pGpmMpmZ
      h1R8MxU74ziyI9uKdokSF5EgAYIg9qXR2zyApHYSNAGJlPV9ktin+/xOo3/n/PYfbaPFWm6d
      xythv8LhQqte4etvLuOaNf5x5TrzSxkufvk3HNfls88/3/VeIQQDAwMATE5OPtcEpNnZWT76
      6CPeeust/H7/riblfesArmNjuwJZuDhI2O0WbcvF49WQJYFjOwhZxrZMJGlLLhQCXAcXgaAj
      MxqGie7347RNGvN7N5LblSaALnakveC4DpKQUAe96KmB70fLS6YD3LkzRyokUw9OUMvO4zQr
      4AmyWqjx03fP4jgOjuM8892Xy2VM0yQcDj83x16z2eTy5U7hrmPHjhGPP737pyzL+xeBhPTg
      JhmQvT60h65vf/Sy9rjj69HFa1vXXVmgxA9uDt224BwE20qwC9Q3Kk9cFwJ84QDiB6IL1Cub
      5HJZwuHjrM5dYzASxevVya6tMpaMAey888c/btd1KRQKyLLM5uYmqqoSjUafmKMfuHnz5k6/
      5/v37zMyMvLMsV2fAGatwLrhZXjAgyzLOI7dqfDgurhCUNosEgx4mFtYY/ZYimt37nPm1OzO
      /du7om3byJKEZdvIikKrXOfyf/nswIt+LhCCt//552TW18jlcoyNjXHt2jVOnz5NMplkbm6O
      arVKqVRCkiRCoRAbGxt88MEHaJq29/MfwmE5AfbCs04827b5wx/+QKFQIBqN8vHHHz+3E6BS
      qXD9+nUymQwXLlxA15/dW7nrN+yYTSo1k5Xb3xEeHqVezqMHB6kWcthqALNeYmZ2lmqlTDan
      4kqCxcUFXATYBkbLQNMHMNsN9GCY3PIiM2+8zf4+i8OBRCLB8vIy8XicgYEBXNel2WyyuLi4
      Ey4hSRLtdhvHccjlcoyOju794JcIkiRx4sQJQqEQhULhuSrBN2/exDRNJicnuX79OufPn382
      nd080DYNVrKbeJwGkjdAvVFnKDGCVxXYCIZiMWLRKKoik4gNslqo4/coNBs18oUiqkdnNDVE
      wzDxejw0GzUUXwjfIQ2D2AuFQoFMJsPFixdpNpvouk6pVELTNDKZTEe2VBTGx8ep1Wq7muFe
      Vriuy/z8PPPz8ywsLDzX2KZkMolt2xw7doxUavcSOF2dAJKsMDw2jV/3Eh9q4PF6O3VBgUQi
      hYOMkoxhu4LQYISRLaXItkxsV+DRVISAU4MdBcXr0ag3msiSAE0h+ebkHhTsAXfLTCf1xhP8
      LAgEkioTCAT44IMP8Pl8NJtN6vU6oVCIn/3sZ5imSaPRQJZlJEkilUoRCAQORNdRhSzLtNtt
      VFV9rlag5eVlbNumWCwyMTGx69iuGEBIMgF/R456/MeU5QcKrLrzt87O/jQZdvv+gYGO8OPI
      ElrqgDuk63YsOFL/Q5Bz9x9UrqvVakCHMaqtKtX16hO0hCLBH2wNonQ6zcrKynMP6/b7/bz9
      9ttks1ny+TzDw8PPHLsnAywuLTE+Oopp26iyjO24SBKsZddJJuJYtoMqy1i2jdGocu3mHUYn
      pkjGtzX+TpiC67rIsoJjW0iy3DkShaBarPKf/+N/6tXaDx0+/NVHvPfJ+/zxj3/k448/5k9/
      +hNTU1PMzs7y9ddfUywWGRsbY2FhgZmZGe7evcvU1BTHjh170aQfGIuLixQKBQKBQFeOs17h
      jTc6pTFHR0e5cePGM82g0AUD1GpV7i/eo9lqIVwVS9fxtOtsVFt4JYsr1+eYHJ+g4bQZHBwm
      Gg0zPOhjeS2HZTRoVIoMRsJsllvoXi+5tRVCQ8OYlRozZ17v7coPKTRNIxKJ7ATPbW52CgSX
      SiVarRZzc3NEo1G++uorpqamuHXr1pFnAEmS+PDDD9nY2MA0Ter1+k7h235jeXmZq1evAnDq
      1Kldx+6qBNerZdqWg+O4qLKE48hMTIxi2w6qIrNZLOP3CgxbYWx8HBwTSUgIIVEq5KnWmwxE
      hggPBEmPjSM5FqpHJxoZYCgxQtD39CSZlw2tVouVlRWy2SzxeJxKpUKpVGJiYgLbtjl79iyF
      QoF33nmHer2+p+J2FOC6Ljdv3mR1dZVMJvNcTbobGxtYloUsyxQKhV1Pnl39AJbZxnYFqiLR
      Mky8moqQJGzLxLRdVFlgWg6qqiLLUqex2pb822o1URQNSRJIQuAicF0H02wjKyqSkJBliXql
      zl//5xcHXLK7dcQezNTmus6Bn/E4LdNnpxk9OUa5XMbr9WLbNh6Ph1wux9BQp9GDoig0m02C
      wSDlcpmBgQEcxznyfoBPP/2Uzc1NhoeH+eCDD/qmC9iWvdM9BjrGjGq1im3ZDA4OPpLeKoRA
      VuQdpnjh4dCWaWGWmwd6hgu4PfEEd3KCtyFkCW/Yv8sdT6HlJQuF2AvPWu+2GdS2bSzL4uTJ
      k32j4d/+66d8+2+Xuho7NBrnP/zLP+8wQNdv2LUtMut5RhIJDMNA83iwtnZzyzRRFAVJkrCM
      BvfmF7CFSiQSYSgaARxcJAQOjgOKItFum3g8HuyWycpnt7/XwvsN1e9hJ3QFjQAAEJlJREFU
      /Ben+dvf/raT85vJZPjJT35CsVjk0qVLpNNphBCUSiXq9Tq2bfd1tzussNom//1f/9szr1/5
      X4821Xv/lz9i/NRET+Y2mga1Uq2rsf6BRze0fWwxDs1mC9uo8+2lb4kOJ2kbFiGfzGJmjaHY
      EAPhCI4r4/f5CMdi3L67QLlSpraRxZB1Bn0SJhqDukK1VmH0+FkOb1LkA0xOTlIoFJiZmWFl
      pdNbd2BggGg0imVZLC8vo6oqtVoNx3F+kAntjuNw+++3uh5/6p9O95Ga7rEPmUFQLm6wtpLB
      GxzAMFqduHDHZSASI5UeY3VxHr/HYW2zRqvZZDiZRvcoSIpGcjhOcDBCZDCI67i4tn1kwqGX
      lpZYWlpiZWWFxcVF1tfXd2JNAoHAToUISZJQFOURefQVDje6PwEkhVMnTyErKkNbqYG2ZSEr
      Kom2gSy5hBNpBgejnH4tiKwoRBQFlzCpZArbFSiKhEBQzK+yWW2ge2QkyyHy2sGsHu6W4ikd
      UIHdDofeWfJWuZeTJ0/u5Jj+8pe/pFKpcPz4cdLpNLquMzExwVtvvYVpmriuu2fa5FGD67pb
      VhVlp/7Sy1K3qGsGEELg821F1W39wNsvQPZ1BJnpyU4zNV1/7LHSo3HX0eE00eE0AJYroccP
      Zh/uVYHWx39UT8SPEOKJujLbsT1e74NWq4qioCjKjlL4MsFuFLhyN4/fp1HIrvLuj/+Jzz7/
      nJ9/+OGLJu3A6JoBimvLqLE0Psmm3bbwaCqW7SBLAst20DSVdrPKzbsrnDo+yuVbi5w7s635
      u7TbFl6vRqtloGkqrZaB1+fDbplk/3qvT8s7GEb//Ukk/SjGq/YWLhK22cLxaQzHgty7cwct
      2PH0byfEWNb+yp7YTsc61BP69rHhuO5WNUKxz4QYs9VEuFDMr3Hl6i1GxiaRdZ1GPkM0FsNV
      vBjNJu1mg9XcBppXY2ErHFrYBrZl4Sg6qrCRvQE211Y4/vo5fhiusKMNx3HxeL2oioI/MExu
      Pcd4stMOdfvUVZT9iUOyJPfMzLufBCUheMQP0L0IJMHq8jKiVWEgoGLh4Vg6Sda1SI2OcOni
      V5x4/TSqLFgvNRkMemg3a5QaFqPJIcJ+hfv5Bo7r4DRr2LKn07qmN5vAK/QRnmCUN04/yOZK
      ppI7/z7qFq+uGSA6OkWwbaIoqS3Hh4IEjKTTOKZBJDlKwB/ErwcYGe0EPjmOjeMKFFlCCDgx
      CKZpoSgSpmmhKjKO4xA+mdxz/l3hbimwB9QBHg+Hlo5ovsIrdI+uGUCSZLzeJz8IIQRoPqYm
      Rh/8f+ce6bGx7DS6luXO1K4kUAIHk7Nd10XqiRL8qCe4ka+g6B68g89OqXuFo42e+tqX7t9n
      fGwr7sWjIWQVx2ojFI31lUUalmBifBTLshF2G1UPYbdMlj/v3oHyvDE4FSf25hi///3vuXDh
      ApcuXWJkZITp6WlM0+S3v/0tH330EVevXmVqaorbt28TjUZ3Lcj6CocHPU3UbBktAPL5HNev
      /IP8Zon5Ozf55vJVGm2bmekpiusZLn75JWvZdcwjIj4qisLExASO43D8+PEde//FixeRZZnv
      vvsOy7JYXFxEURQWFxdfNMmv0CV6egIYjRpruQ0kSSIajVAs5GlboEoSMjYLi0u0G3VCAQ+O
      e3RKixiGwd27d/F4PGxubu7k+Y6NjZHL5UgkEuTzeUKhEPV6nbGxsRdN8r6RX88SicXZyK8T
      jyf4oSSx9ZQBTp56HReBPBTplE2RZNyt8imSEJ1SKFInbFqSOoqxpSnE3xw/8Ny9yDh6Wk6w
      d1BH0zQ++eSTrXIwHZvzdibXduXj7dxXwzCORBTn4/h///cPeAdTpMaPEY8n9r7hJUFPfylF
      eRACsPMhPfRBbbewf/gTE5KEP3Kw8ujbaZe9sgJ5ojrisRZJj9eW8W15v7c9xx5Px6Ph9XqP
      pCf4/Pl3uHxrYd8OraOOrhlg4fY/0IemqefuoEWnCHlB9wewTQNJVmi1DHxeFcN0KebXSYyN
      gmVimDYeVaHZMggEdGq1Oj6vh1q9gT8YwjVtylez/VzjvhH70Tiy7+iIaL1ArVbF6/Pj9fyw
      PN/dm0E9QWqlHKZl4jZqXL9zj2AsSateZjAYQA+FyazkwbGxhI9hYOHeXVzHxkBjwCuxeK9O
      oVwiPTFDbWOVqVNvvPIEHxKEIzHurdyi3jhYctJRQ9fbnKKoCLNOIDyM2ajiCQ7iug4j6VH8
      Pg/NZgtJEpg2qMJmcfE+CEHbcpGEQ7PVxu/XCUfj+KQ2LUdG/oEoWkcBeiDE2NgYzdqTNVFf
      ZnR9AqRG0uCOdLxZI3SqQEtiR/F0HKfT8qhT7WRHnnZdl8JmgUgk2lGAbRshSQwn00iyjCMs
      grNDB1uF6+4o1gfBNs3iB+gBdh2L+btznHr7xy+alOeKfYVDP2wbkx8LftoJjd76/8MfY3wo
      /tB9yiPXLcehUinvj+rHsdUn+KBVmx3bQZKlPenRI0FCifCB5jpsyKwsc+L0G6wu3WN69NmF
      pF427MkAm8uLrLsaQ3KbTAOODYdRvTrbVQgFYJptDNNGUwSy6sVoNtBUwa07C8STI1jNCpGh
      JJrsYljg1WQaLYNQMIjZbHPjf3/V52X2Fum3p/GEdX73u9/xySef8N1331GpVPjFL37Bl19+
      SS6X49133+WLL77gwoUL/PnPfyaVSh3qNqrpdJo///USE7NnnnLVpd1uIyQF1+kkQ5mm+VIk
      /uzJAI4tMJ0mFdPGIyTuzd2iJTxEAiEEFm2jyXAqTb6wgWM5RAIK1++tkkyNoimdMuiVcplq
      s03II7g1nyU9OoSGi6ue4Ki+Qk3TdopXJRKJnfLnlmVhWRaGYZBIJNjY2ODcuXMsLS29SHL3
      RCaTYTASRVOePEWddp2r1+4xNjHBnauXeefHP+azv/yFf/fzn/edru2qEttm5l5jTwaQFIWI
      DHXDg+y0sF0Zj6ZgNMo0bUFyeIjIYJBSpUrLqGALL+FwlFgkSHGzUxEsHB0CAdXSJgO6D08g
      xJBPweaIxEI8BY1Gg9u3b6OqKleuXOHs2bNkMhlGRkYol8soisLc3BzxeJxr166RSBxu55Lr
      OJiWif0UH0arlMPxhMjncyTiYeZu3UQf7Ii1/UqIWVhYIJvN0mg0iEQiuzbZ62tCTHgkxcPS
      rjvxoEkaiB214NjEeOfpQpAc6YyJRaOPemdTqa0hD/5mCo0TFw4oGvQqHHpLB9gL/lgIXdf5
      1a9+hRCCM2c6YkOxWCSVSjE+Po4sy/zmN79BkiRmZmYOfYdJr9dDubhKYPBJ+d8XHcWbvYUv
      GEXXBmjm80z0OSHG7/czMTGB1+ulWq3uOravCTGPhxfsVNR6WtjBY9eeHCOeiDGRZJlo8mBK
      l4uL2wNPsBRSWd9YJ5vNcu7cOQzD4JtvvuHMmTNks1lSqRRra2tks0u8mYw88aMMDQ3t5CYf
      tbaqQnSq+TWeYgYVssbrZx7oBsOJB79XvxJiarUamUwGy7I4e/ZsX+aAHoRC2O06mXyNfGaJ
      2dkJijUXnxcaNQuhCAL+AJoMkqqRyayiCJfhkVE0WYCk4FoOjYVSL9ZyYOgnI9y8eZPBwUGy
      2Syrq6uMj49z8eJFNE1D13VisRgLCwuYprnvtkeHGaovyMzUBKbk3Xvwc0CtVkPXdZrNJs1m
      /5xzB96iJNVHq7pBIODlzvw6utqmXG9jWTaW1Sa3tsbfL13i6o05fDSo2BrL9xcpb6xSqLV7
      sYaeYnJykhs3biDLMjMzM9y4cQMhBMlkJ2vtxo0bvP766y+FBeRhuI6Npqo4HA7vZCwWo1Ao
      UKvVnqjK0UscmAGEkHDaTYZGp7GsNl5VQVUUVLVTJkTzeAiHw6QSQ7SEn5BsIAmXpcx6p0PM
      IYOiKLz55psUi0UMw8Dv9/Pee+/tVDkGmJ+fP5IBb7vCabNaahPxHw7GXlhYwLZtAoEAa2tr
      fZunJ9Ggs6+/BcD5tzuauv5Ew5dnhzvblo1v8vv15N1Gr3QAoUhPNLN7//33AfjpT3/6xPin
      McF2XaCDhmY/Xl+o3/qEbTvg2uAeDsY+f/48GxsbtFot0ul03+bpCQMc5McWksATO1jObS8L
      Y/Wii4kQ4sDP6cUz9gNd16lsXKEy+Hx6+e4FXdcZHR2lWCySyWSYnp7uy/t44ZkbncSYw/HR
      9YoWWZYPDS3doF0v8vXl6/h8AWT1hX8SAHz55ZdkMhnW1tb49a9/3bd38cLtdIfl44feiBmH
      iZZuoeoDnD15nHqjTqNef27z7oZ3332X2dlZZmZmCIf7F3d1CNjd5f78XTYrDeLxCJKkYaGQ
      Tux9FLuOzT8uXyYynEa4bZx2i3j6GD6te6fMemaBfF0m4rNZL5SJxePIQqZpOUyOdlevyLFN
      vvvmW2bOvMnirWsEIwkU4YDTZiCeJujb21xa3syzvLKKPxSiXK4QicUQtqDRajBzfKqvp4EQ
      Eg3DYiQ5jOscjkplV65cIZ/PMz8/T7FY7BsTvPATAMB0ZaZGE1RKJa7PLZKMR7q8UxAK+ilt
      blLayFExBN59hjIPJZKokqBpOrx2fJxypcTVa7dJ7sM5JySFVGIY14VgKEiptEm1tMF6pU3A
      251VJRAMoqgakm1y7MRpzFaFhdvXCUSG+y4KOUYVfzSNrgpC4Vhf5+oW09PT+Hw+xsfH+9po
      /FAwgEd2mc+sE45EOPPaFJlsvqv7XGwcRyDJMuGhJBFdom6Y+5o7u7pCbj2LqkjcurtMJBzh
      7NmTrGa6N705lsHq2hpr2fWtVk0ywXCcVMRHuW509Yyl+buYLuihEAu3ruHRB5l67QyNYq7T
      e62PaFfzXLt2lRoDtKvdvft+Y3Nzk3a7jWmalEr9c5QeAhFIMDJ+jJHvc6dQmJqZOdDsifQU
      iS0rW/ohC+h+9kFJ8XDunfcORMfkzIN2nrHYw6dP/MnBPYY3OsmpaZmhVJpW43DoAEtLSztO
      sGw22zcR6BAwwPdXhHulQL8szzjA5KTHOr4aTx+9rvvB+fPnKRaL1Ot1/H5/3xptHwoR6BUO
      PxzLpG1atFotXNel2Wz2tTJ0s9mkXC5TKpX66nV/xQCvsCdc12Vh4TYLixm+uXgR03H4yxcH
      7e28O65evcrq6iqu61Iqlfp2Qh4KEajfMKp5Pv3sEidOnyasK8i+EN9+fZH33n2bRttFV13q
      psAjLAxXwau41JttBC6xWIz13DqxoQiWI7CtNu1mE1dWufbdJc6c/xGR0P56CR81NEtZ8qUm
      rmOTSMa4c+0agWgnwadfCTEnTpxA13UMw+i0391l7HPpEHOUoXj8BLwy1VqV3MIKd9eqDIW9
      /J/f/w9MKUg8rDKQmMZjFrl45R6JeIiQIqF5B/hrvcr0WJq/f/M1sfRximtzGA0FRXNxzCaa
      9vK/Qt/AMG+9MUBuvYKmybQLG0wOduK3epUQY6zXsRoPLHgBPNC08W19okblQR9g2afiHX6w
      6TyXDjFHGY5loQdDFDfWadbbxGNh/D4FnyIIJybwazbX5pYJKhapRJzAgJ9kwIPqCUHVS36j
      QDo9ympuGdWjMzgQwbEbqPgoVeoEvC93eS8hSaiaTjrdidmKxx+UsemVHmCWDMxSq6uxyoDn
      EQY4CH4QDKD4gryzR73+47NPb9w8/dC/z/WQplc4HPj/y445o09BXXQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='PRODUCTS BY SALES AMOUNT' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PRODUST CATEGORY VS SALES AMOUNT' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAXqUlEQVR4nO3daXBU95nv8e853afVarWk1oaklgRCSAIsCcwizGazGNs3OPZwzYXYATuO
      azx2bnKdqZp736TKNVlqXMlNJlOTIU45cew44DVMDTc2xhDMZgEyYhFILFJLaEX7vvXe576Q
      UUyMsTpxa+E8n1etbnX3oz7n1/9zjv6Louu6jhAGpCiKok52EUJMJgmAMDQJgDA0CYAwNAmA
      MDQJwJcuyPHdv+Ffd/ya37z8CscrGxnfZbYAH+19i4qmgVv/mh7iWn0d7uAXv2JnUw393nG9
      +S0NtlzhtV3v4vnbX2rKMU92Abcfne62ayx54J9YGtPMv72yh9nOrfjdZvSBTuKz5+Brv8rV
      tkHyCheQbLcw1N3CJVc9Z8orWJy7jsbaTpKyZhMauEa/7iAzKYrqygp6/VZy0zV2/PRnLPkf
      f8/qRYXEq8NculKLfcZsZqVoVFS6iEvPZnaCwmv//iMc9zzLvcvmkxGnc7GyCi0hg3lzssA3
      wOWLVwhF2UhMnUVWso36KxW0DyvcUVSIxdfNtT4ds7cfszWKrKw0VKCn5SrVjR1k5haSkWSj
      2VVJc6+PnLl3kOqwTfaHHzZpASIoEPASUsx0uo7z25d3sv/IaRoqj7Bz3zliLF5+teM1hr19
      /O6l3+GzxKCZVGCEvW+9RUu/n4az+zlQ1sDpva9TUtePFTdeJRqrxUKcw4E5MMDbv99Ff8iC
      b3iIvr5urFEm/vPlV+gIqERbNexxCUSbguzb/Q59RHGl5D1KXdfY//ZrVHX76b50mHdLa7l6
      fDd/PNuOeaSJX+96l676U/z6Nzv54FAp/d1tnCitZLjbxVvvHifaprHrt79joL+a371dgj1a
      pbmlfbI/7r+KBCACQn4PB/9rF3uOXuaRbVuIVSEqMYcnn97GcG05OUvWsWDxamaMVFHVWE2b
      OYfViwtIS4i56esdP13FvfeuYuGSpThTkklyxJGTl4/Z3UZTIIm1dy2mqGAOgZ5Wzpw+S3tj
      GwOanbQEO1lz5pFoDVH6cSlXKs7SMRggNNzOxaYRVq9cQdaMeHRdp7TkLCvvv5c771pLwHWO
      HkCLz+KJp7aTnWIHoK2mgos1NZwuK0fDgteaTIZ9mNKzVURF37z2qU4OgSJA1axs+OrjrM0b
      3XGudkJ8YiJRZhVn1izKrrrwFWlcc8fwd8mJ0H+cQY+fwWE3Kagoio7f76Wnu5dQPOSkxXO5
      vgvnbDs+k5UoMwyP+MiMSyLa3UXroId43cupE6Ws3bCZnisNAERbrQwMDqGmWEhNnEHx/Zsp
      StAZ8HmowENn/xD+gUFCOuRkp3DlShPz8jwM2VOIA+ISkrCaVdyf/F3xyanY49LZvP0J6OrE
      5A9xz9eewjpYza//cy+F//ubk/OB/w1M3//+978/2UXcXnR8Hg+JWbkkxYx+vwQDPhRrMtkZ
      iTgy8tC6KvlTSQXrt2xjTrqT9OhBDp6oIDEtk5zcQnLTzBwvPUfsDCcZWbncs7YY1/GDnKnu
      Ir9wHnMyHRz78BhxMwtZNjeBQ/v/RL/iYOmCbEovNJI1K5Psubnkz5nDmUP7CMTNYu3yuZQe
      PEBVYy+Zc+ZRlJdCyeEj9PR1EUiYx0MPbqC74jClV9r5uy1bSbJCSHOQk5UMoSBe3cIdi5eR
      Yenhw0Mn6PRHkZ89g7NH91Ne08nq9feRkRw3yZ99eH7wgx/8QJG+QEbk5+P971HVNkBbSysb
      n/xfFKZPz0OYv4WiKMqUDYCu6+i6jqrKacqXTycUChEMhlBUFZOqoijKZBc14RRFUabsOYCu
      j24kCUAkKKiqCVU1TXYhk072LmFoEgBhaBIAYWgSAGFoEgBhaBIAYWgSAGFoEgBhaBIAYWgS
      AGFoEgBhaBIAYWgRD4Cu64z0tnD4wH7KLtYT0nUGuxv4uOwy/k86oo50NfDhyXKCoSnZMVXc
      xiIfgKCbj46XU7x2PfYhF+dquxkaHKHjWg1dA35Ap9rVRHdXM7L/i4kW8e7QoZCXKHsyNs1M
      Vk4uZbUtONM0MmYk09bZTVpsLEN+C7HW0VKuD0+4Ph4gFApFukQRAfX19ezZswebzcajjz5K
      XNzoaLHy8nL27t0LgMlk4umnn6asrIzTp09jNpvZvn07SUlJ7Nq1C13Xefzxx4mOjgYgGAxy
      6NAhzp07x/33309+fj6vvPIK/f39BINBVq1axbp16zh69CinTp1i/fr1FBcX37LOiAfAZI4j
      2TbEvvf3YVKD6LEzAYhPc9LW0kKvxYo1IwdPXQ8AoVDohp1/io7XEbcQDAZ555132LZtGx0d
      HezevZsnnngCgMLCQgoLC3G73ezatQuz2UxjYyPPPfccNtvotCqvv/46xcXFqKrKm2++Ofbc
      8vJyurq6eOaZZ/jlL39Jamoqzz77LAAHDx4kNjaWs2fP0tbWxnPPPcfAwACBQOCWtUY8AIqi
      krdwFXdoGi2ucrrUVKAXzLEk2K5RfnWYO4vzOFs3+vsm0+ggjVAohKIomM1TdsyO+ByhUAin
      00lNTQ3d3d3k5OSgadrYqDNd17lw4QL5+flYrVZaWlrYsWMH2dnZPPLIIwwNDVFYWIiiKBw7
      dgyLxQKA3+/H6XQSHx9PTk4OPT09ZGRk4Pf7uXLlCt/97nd58cUXMZlM/OIXv2Dt2rWkpaXd
      crTbBOxdOo1XzuC61kdMQgZ3LUtlqMNNlGImNT2VpqEeYqMtxMbFY8BRebclXdex2Wy0trbi
      9XqZMWPGDY/7fD5Onz7Ntm3biI6O5oc//CGhUIg9e/Zw4sSJsVGAiqLcMCKwsLCQnTt3Ulpa
      SmdnJ4WFhQCcPHmSpUuXoqoqPp+Phx9+GKfTyUsvvURRURF2u/1za418ABSVvIUryVv457us
      6bM/uRXHA+lzALhr2YqIlyImhtvtpq6ujm9961sMDQ3x+uuvs2rVqrHW3eVykZaWRmxsLG63
      m5aWFmbNmoXVagXAarXS3NyMqqpj3/4ANpuNb3zjG6iqys6dO0lPTycQCHDu3DmeeeYZAObP
      n4/L5SIzM3Ps9W5lyg6KD4VChEKhWx4C6bpOV1cX58+fx+l0Mn/+/Bua2aamJlwuF/n5+WRm
      ZtLR0UFlZSULFy4kKSmJ5uZmqquriY+PZ+HChWiadsPrV1dXY7PZyMjIoKuri4qKClJSUigo
      KEBVVVpaWlAUhfT09Ih+FtONruuUlJRw/PhxTCYTmzZtwufz0dHRwZo1a/jggw9YuXIlDocD
      j8fDe++9R3V1NYmJiWzbtg2Px8Nrr72Grus8+eSTeDwezp49y/r163njjTfo6elhw4YNLF26
      lMbGRpqbm1m5ciWKojAyMsIbb7xBZ2cna9euZfny5Z97CDSlZ4UYTwD8fj8vvPAC69evp6Ki
      ghUrVrBo0SIA6urq+OCDD1iwYAExMTHMnTuXn/3sZ6xZs4aTJ0/yne98h5MnTxIdHU1NTQ1p
      aWk88MADY6/d19fHCy+8QEFBAVu3buXtt98mNzeXiooKVq9ejdfrZffu3SxatIivfe1rEf88
      prujR49SXFw8dqI7Xrquc+7cOTIzMz9zKPW3mtKzQozH9YAsW7aMgYEBRkZGxh47deoUDoeD
      1tZWVq1ahcvlori4mLvvvpve3l6amprYsGEDXq+Xnp6eG5paXdf5wx/+wObNm6mursZqtbJ9
      +3ZUVaWzs5NAIEBeXh6PPfYYdXV1k/GnTztr1qz5q56nKAqLFy/+kqv5s2ndFcJisZCens6P
      f/xjzp8/T15e3thjra2txMbGMnfuXF599VW6u7tJTk5GURSSkpIYGRmhpaWFn/70p5w/f57c
      3Nyx55aVlTFnzhzS0tKA0Y3g8/l49dVXsVgsFBUVER8fP3ZMK6avad0CtLe34/V6ef7557l8
      +TKHDx8eOxxJS0sjKyuLoqIijh8/jsPh4OrVqyxZsoTm5maWL1+O0+nke9/7HrW1tRw4cICn
      nnoKRVGora3F5XKxb98+GhsbKS4upqSkhJUrVzJv3jyZq+hztDe089o/vzLZZdzUE//8JGmz
      P3uuNq0DkJiYSEdHBz//+c8ZHBxk69atuFwuoqKiWLNmDb/61a94//33cTqdFBQUsH//fn7y
      k59gtVpJTk5mx44duN1uhoaGWLduHY2Njfh8Ph577DEAGhoaOHbsGLGxsRw9epT+/n4OHDjA
      Qw89RGVlJSUlJXR1dREMBtm0aZPhW4RQMMhgz+Bkl3FTwcDNVxSZ1ifB1/9b7PP5MJlM6LrO
      O++8w6ZNm7Db7QQCAYLBIBaLBVVVCQaD+P1+NE1DVVUCgQCBQABVVdE0jbfeeov77ruPlJSU
      sdcPBoNj15evf1QWi4VgMEgwOPqhXr9cZ8TpBT+t9WoLL/7jjsku46ae/df/SUZe5g33TfuT
      YEVRMJlMY31FAB5//PGx25qm3XBp02Qy3fAt/ZePf/3rX//M618P4F9eUzb6t/3tQg5mhaFN
      yxag4WI9FSUVk13GZ6iKwsZ/+OpklyHCMC0D0NnUwZn9ZZNdxmeoqioBmGbkEEgYmgRAGJoE
      QBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBjahAQg
      4B2moe4qza1dBHXwuQdobeseWw8g4B6goaVDZoIWEy7yC2SEApSVHKV7yM21mgtU1LbR3VbH
      sSMf0eseHVR+9eIFDnxUQkCWAhATLPItgK4zEjQxd+48crJS8Iy4QbGQNSOB9u5e0H10uRWc
      jvCmzBPiyxD5IZGqiewZdg7t3wcmjTvvWg2DjaRkpNHe0o7H1geOmVi8F4HRxRWuL4wRCoXG
      ph75tMBN7psqvF7vZJcwafx+/2SX8Ln8fv9Nt03kl0gKDHO1I8BXHnwQb08TH7tqmJ9mQY1O
      xt53iQqXxuz5C7nYPvr716cuudW8QOYpPCVJVFTUZJcwaf5ydu2pRNO0m26biB8CqaoVuzrA
      sWMfcfJ0JY7k6zP8KmQmx3O1a4gE+xfP4y5EJER+iSSTmbvW/Tfcbi+KyYzVGgWhFHRUVCWO
      TVnzsZgU7rlnPWa5KCsm2ARMi6KgmjRi7J9qHk3X31Yl6pNZyT89PbkQE0W+c4WhSQCEoUkA
      hKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAISh
      SQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUkAhKFJAIShSQCEoUV+duigm7KjR+n1jf6c
      kb+I2Q4fVQ1uFt6Zj1kBT08zp2r7WL2kAFVVIl2SEGMiPzmuamXpmvsA6Kw7zzW/zuDAINfq
      asiYk01anEZVVT0tnb0E9QJpksSEinwAFAWTyYQeGKG2eZg7705joKmXjNRk2jq7SbXHM+TX
      iLeOTp77l+uE3WzdsKm8kpiR1zmbyn+7zs3rm4DZoUffvq+tHnPyLGJMMAA40p20tbTSH9WD
      xZmDVn8GYGxhjOsrxIRCn1047GarxkwVU3mVlEgLBKbudgkGAjfdNhMSAD3op8rVzvzV8z/1
      znE4oq9RXjtM0dI8ztWP3j3dV4gx8jTvmjZB36d/BbPZfNNtMyGH3N7BDkzJs4jXRk9wzZoF
      TTMxM30GwyGN2GgLthg7cvorJtqERNbqyKTY8eefUzLmfHIrngedeQCsXLF6IkoR4gZy0UUY
      mgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoE
      QBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGNqEBEDXQ/R1
      tXGttR2vP4TfO0RnVz+hT2arDniHaO3smdLTa4vbU+QDoOu0VZdzrrqJzvY2eoc8dLXU8uGB
      w/R5RqfTrq88zx8/PEzgszOhCxFREQ+AHgpwsa6NWWkJxDqSSIyLBsVCVmoC7d19oPvpGNHJ
      TLBFuhQhPiPya4SFQgz0duIL5uPrrqdswEdOHMzISKW9pR2vrR89biYW7yVgdPGLTy+QcbPF
      MAJTeIEMr9c72SVMmqm8OIjf77/ptol4AFRVISY+lZzcXEwjDo5WNEGcFdWWQkzfJSpdFrLn
      LuBy5+jvT/cFMqKioia7hEmjadpkl/C5NE276baJ+CGQomrcMdPBwQ+PUHLqPMkznNcfITM5
      ntrOARLt1kiXIcRNRX6BDEUhs2AZjqx+gmjExcWgBxMJoWJWYnnQmY/VrLBq1RrMclFWTLAJ
      WSFGUVRi4xM+9a4aowcxJmJso81mdHT0RJQixA3kO1cYmgRAGJoEQBiaBEAYmgRAGJoEQBia
      BEAYmgRAGJoEQBiaBEAYmgRAGJoEQBiaBEAYmgRAGFpYAaiquvTJLZ2Oumr6fRGoSIgJNO4A
      jAz2cezYYXp7e+nt6ebU0fdpGYpkaUJE3rgHxBz5r99y8mQFbW09qGYrc5esIS8xkqUJEXnj
      DsDGJ/6JhesaiHN8stcrCkoIOYsQ01pYQyLPHXyTEzWDKIAlxsGT3/4/zIqPUGVCTICwAjBs
      m8m//MvXUSJVjRATLKwABFsu8eJvX8Wmgtlq5/6Ht5AaE6nShIi8sAKwauMWekZGJ/BUzRbs
      U3ceJCHGJawAVJUf50p7AABTlJ2U7AJiLBGpS4gJEVYAFq58gByvDnqAM6VnsMjOL6a5sC5i
      +n1ePB4PHq8fxd1O50ikyhJiYoTVArgunMTVGQQdEmYuZ45cAhXTXFgBWPvQo1gOHaLdrbF8
      xSIs42o/dGpL/8TZzgAxJjNzFy/D7mngyMfXeHDzV7CbFVovnWLPhVae3vIwZpNcZBUTJ6xD
      oD/ufInWUBxOB7zx8u/pGU9nOD1E14iVjV/dyMaN9zMnzUEIC0lxGp3dg4BOQ6+bjHgNWSBJ
      TLSwWoDOYDRPPXAPCiH0npdpGYDE5C94kg722BBH9u3F5wmwcPW9RAOZzhRa2rrJjh/BZ0rF
      qtUDskDGdHbbL5CxfJad53/0f0mODuGLncc/ftHOD+iKyh1L11CgKIx0N/JxdQ3z0qPQEpxE
      NVbhqrbhzJlL/YV6QBbImM6m4wIZYQUgf/V/57sL+nF7FOLiYzCNozOcHgpy8UI5zuxcuuob
      sMbOBEYAMykJMZxr7GLDPBv14RQixJckrADs2vEjutUZqIBmi2Pz9qfJiL31c1TVxOyZ6VRc
      rMSWlEXxvFn4hnqJUWzYkmfjtzuxWVTmzSvAJD1LxQQLKwBJuUvZcv9GVEBRFKLGs7KRomBP
      ymDF6ow/v2ns9cUyosidNXorMzMrnFKE+FKE2RnuMj//RQ0WRluAR7/5bTLjIlSZEBMgrAB4
      ErJ5/ttPyBgYcdsIKwCBlir+48UX0QAtOpavbnmcdHuEKhNiAoQVgA2bt9PY2k0gBKoWRczU
      veolxLiEFYDLHx+hpOIKAVsWoaCf7DuKiTPuZW9xGwgrAA3DKt98eCUnfEtwNB1gOBCpsoSY
      GGGdz969bAWOwvX4K/fSquWSJVeAxDQXVguQkuwALYl77llOcyCZqKnbI0GIcQmrBfh/HxxA
      C7Ty5h8+5MqRd6mTmeHENBdWAAKeAU7vf5fs+7ZRMDMe39Tt/CfEuIQVgI3rVlHvcfKVpemY
      04uYnfDFzxFiKgsrAJ6RIWovHKauRyE4PIRv6nbLF2JcwgrAodNVPHpfEe6gGbOnjsa+SJUl
      xMQIKwDJVjhf20pV2UH2n+khSWaFE9NcWAF48JEtpMxcQKzuZfNTT5I2nu7QQkxh4/o/gG+w
      iytXmwnpkJiaRSLg7WtjeEaSzAwnprVxBcDT18qJkmM3nPRq0bEkz5KpEcX0Nq4AxGUV8ey3
      i+hquMjBj8rwBECz2jHLwAAxzYW1C7/7x73E0kFsTjFBt5spPAmAEOMSVgCUuCQW5WfjU6yk
      a/20SVcIMc2F1xt0yTLsBesJXdzLNes8chyRKkuIiTG+3qC6h4aGXmYXFBEa6SAmIQVn4Xyi
      5BxATHPj2oUHa05SUjeAgs77v38ZX1IGZe/uptUT6fKEiKxxBcAzMowtxkZgqJHTfUlsvfdu
      VhTY6RqMdHlCRNb/B/HvngTIo9bIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SALES BY REGION' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SALES VS BUDGET' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2d2W8cyZ3nP5l130UWq3jf1EldLXWr1e5uu9tu99iD8czD/AO7f8H+C37Z
      131YYB8XWAwwi10s9mEWsA3Muntn2vbYfapbEu/7LNZdrPvIzNgHUhRJURKzWKQoVnwAgsxk
      RmRURHwrMyO++QtFCCGQSFoU9XUXQCJ5nZyJAAqFwlmcRrKLoesIITAMA+OFF/id/7c61rM4
      ia7rZ3EayS7/47/+J6589O9Y+/M/4rryS273OXEEwlSLOepCZeGHP9N5+S6T3/2Zt95+j6HB
      flTldZf69XAmApCcLW191ylEH2Oxe6kklvim1E59+yF5Wxh3JYbPruMPBKjWNKYff0Mo0kXA
      bXvdxX4tyGeAC4jF6qCa3KBjeAy720slu4VidxPwB3DYbYRDbaxvRPH4/HhcDlp5FER5OgpU
      KBRO7ValVCrhdrtPJW+J5CTs3QJ5vd5TPVEgEDjV/CWSRpC3QJKWRgpA0tJIAUhaGikASUsj
      BSBpaUwJQAiDZDxGvlRBq1VIprOAIJ1KUNN0quUime0Cer2GZkClUjmlYkskzcHUTLAwdISi
      Mjc7g9tmwWVXyKTTYLURTSxAvYrFolD2OKhbvOhYGOlznlbZJZITY0oAqsVGtZAB1Y5qt9LT
      18aX367y1v1bbC7NIVxe2j1WcrksU2txfv7TH+0YsgwDTdNO6zNIzpjv//efyK4nj3382E9u
      0ndn5BRL1DimBKBVi+RKdSyKisMieDK1yo2bw8xMPCEQiiBKGdbjBoPdQd7vu8ziwjJXLg2j
      qipWq7QdXRRKqRzbm6ljH6+Va+e2/U2VyurwcH18fG97cPf33bfadv/qOXB88NLwScomkZw6
      chRI0tJIAUhaGikASUsjBSBpaaQAJC2NFICkpZECkLQ0puYBdK3K3Ow8dcWO16qRL5bp6R9k
      bW2NYKgTUc6Qr+xMhOHuIBlLMDbSf1pll0hOjEkrhJ2+3i7WYtvUaiW0Wo3NWIrL12/sWCEs
      LnrDFtLpDDOPV/npT96TVogLiNlYgoahn9v2N3cFqBaZW4py5eol5qYn6e1pZytRIxZLUDNU
      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
    </thumbnail>
    <thumbnail height='192' name='TOP CUSTOMERS ' width='192'>
      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
      iWwODQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
